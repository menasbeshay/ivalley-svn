
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using Combo.DAL;
namespace Combo.BLL
{
	public class ComboPost : _ComboPost
	{
		public ComboPost()
		{
		
		}

        // get user posts - shared posts - friends posts - following posts
        public virtual bool GetPostByUserID(int userid)
        {
            return LoadFromRawSql(@"Select P.*, U.UserName, A.Path ProfilePic, S.IsPostsDownloadable , case when PV.ComboPostID is null then 'False' else 'True' end IsFavourite, case when PL.ComboPostID is null then 'False' else 'True' end IsLike,U.UserRankID, 0 Source from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and 
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID 
                                    Left join ComboPostFav PV on P.ComboPostID = PV.ComboPostID and PV.ComboUserID = {0}
                                    Left join ComboPostLike PL on P.ComboPostID = PL.ComboPostID and PL.ComboUserID = {0}
                                    Where P.ComboUserID = {0} and 
                                    (P.IsDeleted <> 1 or P.IsDeleted is null) and 
                                    P.ComboUserID not in (select BlockedUserID from BlockedUser where ComboUserID = {0}) and 
                                    P.ComboUserID not in (select ComboUserID from BlockedUser where BlockedUserID = {0})
                                    union all
                                    Select P.ComboPostID, P.ComboUserID, P.PostText, PS.ShareDate PostDate, P.IsDeleted, U.UserName, A.Path ProfilePic, S.IsPostsDownloadable, case when PV.ComboPostID is null then 'False' else 'True' end, case when PL.ComboPostID is null then 'False' else 'True' end,U.UserRankID, 1 from ComboPost P                                                                        
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID 
                                    Inner join ComboPostShare PS on PS.ComboPostID = P.ComboPostID and 
																	PS.ComboUserID = {0}
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and															   
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join ComboPostFav PV on P.ComboPostID = PV.ComboPostID and PV.ComboUserID = {0}
                                    Left join ComboPostLike PL on P.ComboPostID = PL.ComboPostID and PL.ComboUserID = {0}
									Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Where (P.IsDeleted <> 1 or P.IsDeleted is null) and 
                                    P.ComboUserID not in (select BlockedUserID from BlockedUser where ComboUserID = {0}) and 
                                    P.ComboUserID not in (select ComboUserID from BlockedUser where BlockedUserID = {0})
                                    union all
                                    Select P.*, U.UserName, A.Path ProfilePic , S.IsPostsDownloadable, case when PV.ComboPostID is null then 'False' else 'True' end, case when PL.ComboPostID is null then 'False' else 'True' end ,U.UserRankID, 2 from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and 
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    Left join ComboPostFav PV on P.ComboPostID = PV.ComboPostID and PV.ComboUserID = {0}
                                    Left join ComboPostLike PL on P.ComboPostID = PL.ComboPostID and PL.ComboUserID = {0}
                                    Where P.ComboUserID in (select ComboUserID from ProfileFollower PF where PF.ComboFollowerID = {0}) and 
                                    (P.IsDeleted <> 1 or P.IsDeleted is null) and 
                                    P.ComboUserID not in (select BlockedUserID from BlockedUser where ComboUserID = {0}) and 
                                    P.ComboUserID not in (select ComboUserID from BlockedUser where BlockedUserID = {0})
                                    /*union
                                    Select P.*, U.UserName, A.Path ProfilePic, S.IsPostsDownloadable 
                                    from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    inner join ComboUserFriend CF on U.ComboUserID = CF.ComboFriendID and 
								                                     CF.ComboUserID = {0} and 
                                                                     CF.RequestApproved = 1	and 
                                                                     (CF.IsBanned <> 1 or CF.IsBanned is null)
                                    where (P.IsDeleted <> 1 or P.IsDeleted is null)

                                    union 
                                    Select P.*, U.UserName, A.Path ProfilePic, S.IsPostsDownloadable 
                                    from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    Inner join ComboUserFriend CFF on U.ComboUserID = CFF.ComboUserID and
								                                      CFF.ComboFriendID = {0} and
                                                                      CFF.RequestApproved = 1 and
                                                                      (CFF.IsBanned <> 1 or CFF.IsBanned is null)
                                    where (P.IsDeleted <> 1 or P.IsDeleted is null)*/
                                    order by PostDate Desc", userid);
        }

        public virtual bool GetUserPostByUserID(int userid)
        {
            return LoadFromRawSql(@"Select P.*, U.UserName, A.Path ProfilePic, S.IsPostsDownloadable, case when PV.ComboPostID is null then 'False' else 'True' end IsFavourite, case when PL.ComboPostID is null then 'False' else 'True' end IsLike,U.UserRankID from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and 
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID 
                                    Left join ComboPostFav PV on P.ComboPostID = PV.ComboPostID and PV.ComboUserID = {0}
                                    Left join ComboPostLike PL on P.ComboPostID = PL.ComboPostID and PL.ComboUserID = {0}
                                    Where P.ComboUserID = {0} and 
                                    (P.IsDeleted <> 1 or P.IsDeleted is null)                                                                          
                                    order by P.PostDate Desc", userid);
        }

        public virtual bool GetUserPostsCountByUserID(int userid)
        {
            return LoadFromRawSql(@"Select count(P.ComboPostID) TotalPostCount from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and 
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)                                    
                                    Where P.ComboUserID = {0} and 
                                    (P.IsDeleted <> 1 or P.IsDeleted is null)", userid);
        }

        public virtual bool GetPhotoPostsByUserID(int userid)
        {
            return LoadFromRawSql(@"Select P.*, U.UserName, A.Path ProfilePic, S.IsPostsDownloadable, case when PV.ComboPostID is null then 'False' else 'True' end IsFavourite, case when PL.ComboPostID is null then 'False' else 'True' end IsLike,U.UserRankID from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and 
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    Left join ComboPostFav PV on P.ComboPostID = PV.ComboPostID and PV.ComboUserID = {0}
                                    Left join ComboPostLike PL on P.ComboPostID = PL.ComboPostID and PL.ComboUserID = {0}
                                    Inner Join ComboPostAttachment PA on P.ComboPostID = PA.ComboPostID
                                    inner Join Attachment AA on PA.AttachmentID = AA.AttachmentID and 
                                                                AA.AttachmentTypeID = 1 
                                    Where P.ComboUserID = {0} and 
                                    (P.IsDeleted <> 1 or P.IsDeleted is null)                                     
                                    order by P.PostDate Desc", userid);
        }

        public virtual bool GetAudioPostsByUserID(int userid)
        {
            return LoadFromRawSql(@"Select P.*, U.UserName, A.Path ProfilePic, S.IsPostsDownloadable, case when PV.ComboPostID is null then 'False' else 'True' end IsFavourite, case when PL.ComboPostID is null then 'False' else 'True' end IsLike,U.UserRankID from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and 
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    Left join ComboPostFav PV on P.ComboPostID = PV.ComboPostID and PV.ComboUserID = {0}
                                    Left join ComboPostLike PL on P.ComboPostID = PL.ComboPostID and PL.ComboUserID = {0}
                                    Inner Join ComboPostAttachment PA on P.ComboPostID = PA.ComboPostID
                                    inner Join Attachment AA on PA.AttachmentID = AA.AttachmentID and 
                                                                AA.AttachmentTypeID = 2 
                                    Where P.ComboUserID = {0} and 
                                    (P.IsDeleted <> 1 or P.IsDeleted is null)                                     
                                    order by P.PostDate Desc", userid);
        }

        public virtual bool GetVedioPostsByUserID(int userid)
        {
            return LoadFromRawSql(@"Select P.*, U.UserName, A.Path ProfilePic, S.IsPostsDownloadable, case when PV.ComboPostID is null then 'False' else 'True' end IsFavourite, case when PL.ComboPostID is null then 'False' else 'True' end IsLike,U.UserRankID from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and 
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    Left join ComboPostFav PV on P.ComboPostID = PV.ComboPostID and PV.ComboUserID = {0}
                                    Left join ComboPostLike PL on P.ComboPostID = PL.ComboPostID and PL.ComboUserID = {0}
                                    Inner Join ComboPostAttachment PA on P.ComboPostID = PA.ComboPostID
                                    inner Join Attachment AA on PA.AttachmentID = AA.AttachmentID and 
                                                                AA.AttachmentTypeID = 3 
                                    Where P.ComboUserID = {0} and 
                                    (P.IsDeleted <> 1 or P.IsDeleted is null)                                     
                                    order by P.PostDate Desc", userid);
        }

        public virtual bool GetTextPostsByUserID(int userid)
        {
            return LoadFromRawSql(@"Select P.*, U.UserName, A.Path ProfilePic, S.IsPostsDownloadable, case when PV.ComboPostID is null then 'False' else 'True' end IsFavourite, case when PL.ComboPostID is null then 'False' else 'True' end IsLike,U.UserRankID from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and 
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    Left join ComboPostFav PV on P.ComboPostID = PV.ComboPostID and PV.ComboUserID = {0}
                                    Left join ComboPostLike PL on P.ComboPostID = PL.ComboPostID and PL.ComboUserID = {0}
                                    left outer Join ComboPostAttachment PA on P.ComboPostID = PA.ComboPostID                                                                           
                                    Where P.ComboUserID = {0} and PA.ComboPostID is null and
                                    (P.IsDeleted <> 1 or P.IsDeleted is null)                                     
                                    order by P.PostDate Desc", userid);
        }

        public virtual bool GetLikedPostByUserID(int userid)
        {
            return LoadFromRawSql(@"Select P.*, U.UserName, A.Path ProfilePic , S.IsPostsDownloadable, case when PV.ComboPostID is null then 'False' else 'True' end IsFavourite, case when PL.ComboPostID is null then 'False' else 'True' end IsLike,U.UserRankID
                                    from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and 
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)                                    
                                    Inner Join ComboPostLike PL on PL.ComboPostID = P.ComboPostID and 
							                                       PL.ComboUserID = {0}
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboPostFav PV on P.ComboPostID = PV.ComboPostID and PV.ComboUserID = {0}                                    
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    Where (P.IsDeleted <> 1 or P.IsDeleted is null) and 
                                    P.ComboUserID not in (select BlockedUserID from BlockedUser where ComboUserID = {0}) and 
                                    P.ComboUserID not in (select ComboUserID from BlockedUser where BlockedUserID = {0})
                                    order by P.PostDate Desc", userid);
        }

        public virtual bool GetFollowingPostsByUserID(int userid)
        {
            return LoadFromRawSql(@"Select P.*, U.UserName, A.Path ProfilePic , S.IsPostsDownloadable, case when PV.ComboPostID is null then 'False' else 'True' end IsFavourite, case when PL.ComboPostID is null then 'False' else 'True' end IsLike,U.UserRankID from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and 
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    Left join ComboPostFav PV on P.ComboPostID = PV.ComboPostID and PV.ComboUserID = {0}
                                    Left join ComboPostLike PL on P.ComboPostID = PL.ComboPostID and PL.ComboUserID = {0}
                                    Where P.ComboUserID in (select ComboUserID from ProfileFollower PF where PF.ComboFollowerID = {0}) and 
                                    (P.IsDeleted <> 1 or P.IsDeleted is null) and 
                                    P.ComboUserID not in (select BlockedUserID from BlockedUser where ComboUserID = {0}) and 
                                    P.ComboUserID not in (select ComboUserID from BlockedUser where BlockedUserID = {0})
                                    order by P.PostDate Desc", userid);
        }

        public virtual bool GetFriendsPostsByUserID(int userid)
        {
            return LoadFromRawSql(@"Select P.*, U.UserName, A.Path ProfilePic, S.IsPostsDownloadable 
                                    from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    inner join ComboUserFriend CF on U.ComboUserID = CF.ComboFriendID and 
								                                     CF.ComboUserID = {0} and 
                                                                     CF.RequestApproved = 1	and 
                                                                     (CF.IsBanned <> 1 or CF.IsBanned is null)					 
                                    where (P.IsDeleted <> 1 or P.IsDeleted is null)

                                    union 
                                    Select P.*, U.UserName, A.Path ProfilePic, S.IsPostsDownloadable 
                                    from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    Inner join ComboUserFriend CFF on U.ComboUserID = CFF.ComboUserID and
								                                      CFF.ComboFriendID = {0} and
                                                                      CFF.RequestApproved = 1 and
                                                                      (CFF.IsBanned <> 1 or CFF.IsBanned is null)
                                    where (P.IsDeleted <> 1 or P.IsDeleted is null)
                                    order by P.PostDate Desc", userid);
        }

        public virtual bool GetPostByID(int pid)
        {
            return LoadFromRawSql(@"Select P.*, U.UserName, A.Path ProfilePic, S.IsPostsDownloadable,U.UserRankID from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    Where P.ComboPostID = {0} and 
                                    (P.IsDeleted <> 1 or P.IsDeleted is null)", pid);
        }

        public virtual bool SearchPosts(string filterText, int requester)
        {
            return LoadFromRawSql(@"Select P.*, U.UserName, A.Path ProfilePic , S.IsPostsDownloadable from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and 
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    Where P.ComboUserID in (select ComboFollowerID from ProfileFollower PF where PF.ComboUserID = {1}) and 
                                    (P.IsDeleted <> 1 or P.IsDeleted is null) and P.PostText like '%' + {0} + '%' and 
                                    P.ComboUserID not in (select BlockedUserID from BlockedUser where ComboUserID = {1}) and 
                                    P.ComboUserID not in (select ComboUserID from BlockedUser where BlockedUserID = {1})
                                    /*union
                                    Select P.*, U.UserName, A.Path ProfilePic, S.IsPostsDownloadable 
                                    from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    inner join ComboUserFriend CF on U.ComboUserID = CF.ComboFriendID and 
								                                     CF.ComboUserID = {1} and 
                                                                     CF.RequestApproved = 1	and 
                                                                     (CF.IsBanned <> 1 or CF.IsBanned is null)
                                    where P.PostText like '%' + {0} + '%' and (P.IsDeleted <> 1 or P.IsDeleted is null)

                                    union 
                                    Select P.*, U.UserName, A.Path ProfilePic, S.IsPostsDownloadable 
                                    from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    Inner join ComboUserFriend CFF on U.ComboUserID = CFF.ComboUserID and
								                                      CFF.ComboFriendID = {1} and
                                                                      CFF.RequestApproved = 1 and
                                                                      (CFF.IsBanned <> 1 or CFF.IsBanned is null)
                                    where P.PostText like '%' + {0} + '%' and  (P.IsDeleted <> 1 or P.IsDeleted is null)*/
                                    union
                                    Select P.*, U.UserName, A.Path ProfilePic, S.IsPostsDownloadable from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    Where P.PostText like '%' + {0} + '%' and 
                                    (P.IsDeleted <> 1 or P.IsDeleted is null) and 
                                    P.ComboUserID not in (select BlockedUserID from BlockedUser where ComboUserID = {1}) and 
                                    P.ComboUserID not in (select ComboUserID from BlockedUser where BlockedUserID = {1})", filterText, requester);
        }

        public virtual bool ExplorePosts(int userID)
        {
            return LoadFromRawSql(@"select P.* , U.UserName, A.Path ProfilePic, S.IsPostsDownloadable,U.UserRankID, case when PL.ComboPostID is null then 'False' else 'True' end IsLike,
                                    (select COUNT(c.ComboCommentID) 
                                     from ComboComment C where P.ComboPostID = C.ComboPostID)  commentCount
                                    ,(select COUNT(pl.ComboPostID) LikeCount 
                                    from ComboPostLike PL where P.ComboPostID = PL.ComboPostID ) Likecount
                                    from ComboPost P Inner Join ComboUser U on P.ComboUserID = U.ComboUserID
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    Left join ComboPostLike PL on P.ComboPostID = PL.ComboPostID and PL.ComboUserID = {0} 
                                    where P.ComboUserID not in (select BlockedUserID from BlockedUser where ComboUserID = {0}) and 
                                    P.ComboUserID not in (select ComboUserID from BlockedUser where BlockedUserID = {0})
                                    order by Likecount desc, commentCount desc , PostDate desc ");
        }

        public virtual bool GetPostsByHashTagID(int id)
        {
            return LoadFromRawSql(@"select P.* , U.UserName, A.Path ProfilePic, S.IsPostsDownloadable,U.UserRankID
                                    (select COUNT(c.ComboCommentID) 
                                     from ComboComment C where P.ComboPostID = C.ComboPostID)  commentCount
                                    ,(select COUNT(pl.ComboPostID) LikeCount 
                                    from ComboPostLike PL where P.ComboPostID = PL.ComboPostID ) Likecount
                                    from ComboPost P Inner Join ComboUser U on P.ComboUserID = U.ComboUserID
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID
                                    Inner Join PostHashTag PHT on P.ComboPostID = PHT.ComboPostID 
                                    where PHT.HashTagID = {0}
                                    order by Likecount desc, commentCount desc , PostDate desc ");
        }

        public virtual bool GetFavPostByUserID(int userid)
        {
            return LoadFromRawSql(@"Select P.*, U.UserName, A.Path ProfilePic , S.IsPostsDownloadable, case when PV.ComboPostID is null then 'False' else 'True' end IsFavourite, case when PL.ComboPostID is null then 'False' else 'True' end IsLike,U.UserRankID
                                    from ComboPost P
                                    Inner Join ComboUser U on P.ComboUserID = U.ComboUserID and 
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)                                    
                                    Inner Join ComboPostFav PV on PV.ComboPostID = P.ComboPostID and 
							                                       PV.ComboUserID = {0}
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Left join ComboUserSettings S on P.ComboUserID = S.ComboUserID                                    
                                    Left join ComboPostLike PL on P.ComboPostID = PL.ComboPostID and PL.ComboUserID = {0}
                                    Where (P.IsDeleted <> 1 or P.IsDeleted is null) and 
                                    P.ComboUserID not in (select BlockedUserID from BlockedUser where ComboUserID = {0}) and 
                                    P.ComboUserID not in (select ComboUserID from BlockedUser where BlockedUserID = {0})
                                    order by P.PostDate Desc", userid);
        }

	}
}
