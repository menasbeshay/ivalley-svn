
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using Combo.DAL;
namespace Combo.BLL
{
	public class ComboMsg : _ComboMsg
	{
		public ComboMsg()
		{
		
		}


        public virtual bool GetMessageById(int MsgId)
        {
            return LoadFromRawSql(@"Select M.*, U.UserName, A.Path ProfilePic , '[' + Stuff((select ',{""ComboUserID"":' + STR(UM.ComboUserID)+ ',""DisplayName"" : ""'+ISnull( U2.displayname , '')+ '"", ""ProfilePic"" : ""'+ isnull(A2.path, '') + '""}' from ComboUserMsg UM
												   Inner join ComboUser U2 on UM.CombouserID = U2.ComboUserID
												   left join Attachment A2 on U2.ProfileImgID = A2.AttachmentID
												   where UM.ComboMsgID = M.ComboMsgID for XML path('')),1,1,'') + ']' ToIds 
                                    from ComboMsg M
                                    Inner Join ComboUser U on M.ComboUserID = U.ComboUserID and 
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Where M.ComboMsgID = {0} and                                     
                                    (M.IsDeleted <> 1 or M.IsDeleted is null) ", MsgId);
        }

        public virtual bool GetUserMessages(int UserId)
        {
            return LoadFromRawSql(@"Select M.*, U.UserName, A.Path ProfilePic , '[' + Stuff((select ',{""ComboUserID"":' + STR(UM.ComboUserID)+ ',""DisplayName"" : ""'+ISnull( U2.displayname , '')+ '"", ""ProfilePic"" : ""'+ isnull(A2.path, '') + '""}' from ComboUserMsg UM
												   Inner join ComboUser U2 on UM.CombouserID = U2.ComboUserID
												   left join Attachment A2 on U2.ProfileImgID = A2.AttachmentID
												   where UM.ComboMsgID = M.ComboMsgID for XML path('')),1,1,'') + ']' ToIds 
                                    from ComboMsg M
                                    Inner Join ComboUser U on M.ComboUserID = U.ComboUserID and 
                                                                (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Inner join ComboUserMsg CM on M.ComboMsgID = CM.ComboMsgID
                                    Where CM.ComboUserID = {0}  and                                     
                                    (M.IsDeleted <> 1 or M.IsDeleted is null) 

                                    union 

                                    Select M.*, U.UserName, A.Path ProfilePic , '[' + Stuff((select ',{""ComboUserID"":' + STR(UM.ComboUserID)+ ',""DisplayName"" : ""'+ISnull( U2.displayname , '')+ '"", ""ProfilePic"" : ""'+ isnull(A2.path, '') + '""}' from ComboUserMsg UM
												   Inner join ComboUser U2 on UM.CombouserID = U2.ComboUserID
												   left join Attachment A2 on U2.ProfileImgID = A2.AttachmentID
												   where UM.ComboMsgID = M.ComboMsgID for XML path('')),1,1,'') + ']' ToIds 
                                    from ComboMsg M
                                    Inner Join ComboUser U on M.ComboUserID = U.ComboUserID and 
                                                                (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Inner join ComboUserMsg CM on M.ComboMsgID = CM.ComboMsgID
                                    Where M.ComboUserID = {0}  and                                     
                                    (M.IsDeleted <> 1 or M.IsDeleted is null) 

                                    Order by M.MsgDate Desc", UserId);
        }

        public virtual bool GetMessagesBetweenUsers(int _1stUserId, int _2ndUserId)
        {
            return LoadFromRawSql(@"Select M.*, U.UserName, A.Path ProfilePic , '[' + Stuff((select ',{""ComboUserID"":' + STR(UM.ComboUserID)+ ',""DisplayName"" : ""'+ISnull( U2.displayname , '')+ '"", ""ProfilePic"" : ""'+ isnull(A2.path, '') + '""}' from ComboUserMsg UM
												   Inner join ComboUser U2 on UM.CombouserID = U2.ComboUserID
												   left join Attachment A2 on U2.ProfileImgID = A2.AttachmentID
												   where UM.ComboMsgID = M.ComboMsgID for XML path('')),1,1,'') + ']' ToIds 
                                    from ComboMsg M
                                    Inner Join ComboUser U on M.ComboUserID = U.ComboUserID and 
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Inner join ComboUserMsg CM on M.ComboMsgID = CM.ComboMsgID
                                    Where CM.ComboUserID = {0} and 
	                                      M.ComboUserID = {1}  and                                     
                                    (M.IsDeleted <> 1 or M.IsDeleted is null) 

                                    union 
                                    Select M.*, U.UserName, A.Path ProfilePic , '[' + Stuff((select ',{""ComboUserID"":' + STR(UM.ComboUserID)+ ',""DisplayName"" : ""'+ISnull( U2.displayname , '')+ '"", ""ProfilePic"" : ""'+ isnull(A2.path, '') + '""}' from ComboUserMsg UM
												   Inner join ComboUser U2 on UM.CombouserID = U2.ComboUserID
												   left join Attachment A2 on U2.ProfileImgID = A2.AttachmentID
												   where UM.ComboMsgID = M.ComboMsgID for XML path('')),1,1,'') + ']' ToIds 
                                    from ComboMsg M
                                    Inner Join ComboUser U on M.ComboUserID = U.ComboUserID and 
                                                              (U.IsDeactivated <> 1 or U.IsDeactivated is null)
                                    Left join Attachment A on U.ProfileImgID = A.AttachmentID
                                    Inner join ComboUserMsg CM on M.ComboMsgID = CM.ComboMsgID
                                    Where CM.ComboUserID = {1} and 
	                                      M.ComboUserID = {0}  and                                     
                                    (M.IsDeleted <> 1 or M.IsDeleted is null) 
                                    order by M.MsgDate desc", _1stUserId, _2ndUserId);
        }

        public virtual bool GetUnReadMsgComments(int userID)
        {
            return LoadFromRawSql(@"select (select COUNT(M.ComboMsgID) from ComboMsg M where (M.IsRead <> 1 or M.IsRead is null) and M.ComboUserID= {0}) + 
                                    (select COUNT(C.ComboCommentID) from ComboComment C where (C.IsRead <> 1 or C.IsRead is null) and (C.ComboMsgID is not null)  and C.ComboUserID= {0} ) MsgCommentsCounter", userID);
        }
	}
}
