
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using IStock.DAL;
using System.Collections.Specialized;
using System.Data.SqlClient;
using System.Data;
namespace IStock.BLL
{
	public class ClientReturns : _ClientReturns
	{
		public ClientReturns()
		{
		
		}


        public virtual bool GetAllClientReturns()
        {
            ListDictionary parameters = new ListDictionary();

            return LoadFromSql("GetAllClientReturns", parameters);
        }

        public virtual string GetLastClientReturnNo()
        {
            ListDictionary parameters = new ListDictionary();
            object number = LoadFromSqlScalar("GetLastClientReturnNo", parameters);
            if (number != null)
                return number.ToString();
            else
                return "";
        }

        public string getNewSerial()
        {
            string serial = "";

            string temp = GetLastClientReturnNo();

            if (string.IsNullOrEmpty(temp))
            {
                temp = "10000";
            }

            temp = (double.Parse(temp) + 1).ToString();
            if (!temp.StartsWith("7"))
                serial = "7" + double.Parse(temp).ToString("000000000");
            else
                serial = double.Parse(temp).ToString("0000000000");
            return serial;
        }

        public decimal GetClientReturnTotals(int ClientReturnID)
        {
            ListDictionary parameters = new ListDictionary();
            parameters.Add(new SqlParameter("@ClientReturnID", SqlDbType.Int, 0), ClientReturnID);
            object total = LoadFromSqlScalar("GetClientReturnTotals", parameters);
            if (total != null)
                return decimal.Parse(total.ToString());
            return 0;
        }

        public virtual bool GetClientReturnTotalsForReport(int ClientReturnID)
        {
            ListDictionary parameters = new ListDictionary();
            parameters.Add(new SqlParameter("@ClientReturnID", SqlDbType.Int, 0), ClientReturnID);
            return LoadFromSql("GetClientReturnTotals", parameters);
            
        }

        public virtual bool GetLastClientReturnForInvoice(int ClientID)
        {
            ListDictionary parameters = new ListDictionary();
            parameters.Add(new SqlParameter("@ClientID", SqlDbType.Int, 0), ClientID);
            return LoadFromSql("GetLastClientReturnForInvoice", parameters);
            
        }

        public virtual bool GetClientReturnByInvoiceID(int InvoiceID)
        {
            ListDictionary parameters = new ListDictionary();
            parameters.Add(new SqlParameter("@InvoiceID", SqlDbType.Int, 0), InvoiceID);
            return LoadFromSql("GetClientReturnByInvoiceID", parameters);

        }

        public virtual bool GetLastClientReturnForDeliveryOrder(int ClientID)
        {
            ListDictionary parameters = new ListDictionary();
            parameters.Add(new SqlParameter("@ClientID", SqlDbType.Int, 0), ClientID);
            return LoadFromSql("GetLastClientReturnForDeliveryOrder", parameters);

        }

        public virtual bool GetClientReturnByDeliveryOrderID(int DeliveryOrderID)
        {
            ListDictionary parameters = new ListDictionary();
            parameters.Add(new SqlParameter("@DeliveryOrderID", SqlDbType.Int, 0), DeliveryOrderID);
            return LoadFromSql("GetClientReturnByDeliveryOrderID", parameters);

        }

        public virtual bool Report_ClientReturn(int ClientReturnID)
        {
            ListDictionary parameters = new ListDictionary();
            parameters.Add(new SqlParameter("@ClientReturnID", SqlDbType.Int, 0), ClientReturnID);
            return LoadFromSql("Report_ClientReturn", parameters);

        }
	}
}
