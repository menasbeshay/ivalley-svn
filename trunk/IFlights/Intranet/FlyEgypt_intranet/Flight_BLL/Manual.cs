
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using Flight_DAL;
namespace Flight_BLL
{
	public class Manual : _Manual
	{
		public Manual()
		{
		
		}

        public virtual bool GetManualsByCatID(int CatID)
        {
            return LoadFromRawSql(@"select M.*, U.username UpdatedByName , C.username CreatedByName ,
                                    (Select Top 1 path from ManualVersion MV where MV.ManualID = M.ManualID Order by MV.LastUpdatedDate desc) VersionPath       
                                    from Manual M
                                    Left join aspnet_users U on M.UpdatedBy = U.UserID
                                    Left join aspnet_users C on M.CreatedBy = C.UserID                                    
                                    where ManualCategoryID = {0} order by CreatedDate desc", CatID);            
        }

        public virtual bool GetManualsByCatID(int CatID, Guid UserID)
        {
            return LoadFromRawSql(@"select M.*, U.username UpdatedByName , C.username CreatedByName ,-- ,sum(case when UMV.UserNotificationID is not null then 1 else 0 end) ManualVersionUpdates ,
                                    (Select Top 1 path from ManualVersion MV where MV.ManualID = M.ManualID Order by MV.LastUpdatedDate desc) VersionPath   ,
                                    (select isnull(sum(case when UM.UserNotificationID is not null then 1 else 0 end),0)  from UsersNofications UM where M.ManualID = UM.ManualID and 
								                                     UM.FormID is null and 
								                                     UM.ManualVersionID is null and 
								                                     UM.FromVersionID is null and 
								                                     (UM.IsRead is null OR UM.IsRead <> 1) and
								                                     UM.UserID = {1}) ManualUpdates, 
                                    (select isnull(sum(case when UMV.UserNotificationID is not null then 1 else 0 end),0)  from UsersNofications UMV where M.ManualID = UMV.ManualID and 
								                                     UMV.FormID is null and 								 
								                                     UMV.FromVersionID is null and 
								                                     UMV.ManualVersionID is not null and
								                                     (UMV.IsRead is null OR UMV.IsRead <> 1) and
								                                     UMV.UserID = {1}) ManualVersionUpdates,
                                    (select isnull(sum(case when UF.UserNotificationID is not null then 1 else 0 end),0)  from UsersNofications UF where M.ManualID = UF.ManualID and 
								                                     UF.FormID is not null and 
								                                     UF.ManualVersionID is null and 
								                                     UF.FromVersionID is null and 
								                                     (UF.IsRead is null OR UF.IsRead <> 1) and
								                                     UF.UserID = {1}) ManualFormUpdates, 
                                    (select isnull(sum(case when UFV.UserNotificationID is not null then 1 else 0 end),0)  from UsersNofications UFV where M.ManualID = UFV.ManualID and 
								                                     UFV.FormID is not null and 								 
								                                     UFV.FromVersionID is not null and 
								                                     UFV.ManualVersionID is null and
								                                     (UFV.IsRead is null OR UFV.IsRead <> 1) and
								                                     UFV.UserID = {1}) ManualFormVersionUpdates										 								    
                                    from Manual M
                                    Left join aspnet_users U on M.UpdatedBy = U.UserID
                                    Left join aspnet_users C on M.CreatedBy = C.UserID     
                                    where ManualCategoryID = {0} 

                                    order by CreatedDate desc", CatID, UserID);
        }

        public virtual bool GetFormsByCatID(int CatID)
        {
            this.Where.ManualCategoryID.Value = CatID;
            this.Where.ManualCategoryID.Operator = MyGeneration.dOOdads.WhereParameter.Operand.Equal;
            this.Where.IsForm.Value = true;
            this.Where.IsForm.Operator = MyGeneration.dOOdads.WhereParameter.Operand.Equal;
            return this.Query.Load();
        }
	}
}
