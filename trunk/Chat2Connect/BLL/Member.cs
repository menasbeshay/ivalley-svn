
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Collections.Specialized;
using System.Data;
using System.Data.SqlClient;
using DAL;
using System.Collections.Generic;
using System.Linq;

namespace BLL
{
    public class Member : _Member
    {
        public Member()
        {

        }

        public virtual bool GetMemberByUserId(Guid UserId)
        {
            ListDictionary parameters = new ListDictionary();

            parameters.Add(new SqlParameter("@UserId", SqlDbType.UniqueIdentifier, 0), UserId);

            return LoadFromSql("GetMemberByUserId", parameters);

        }

        public virtual bool GetMemberFriendsByStatus(int MemberID, bool Status)
        {
            ListDictionary parameters = new ListDictionary();
            parameters.Add(new SqlParameter("@MemberID", SqlDbType.Int, 0), MemberID);
            parameters.Add(new SqlParameter("@Status", SqlDbType.Bit, 0), Status);
            return LoadFromSql("GetMemberFriendsByStatus", parameters);

        }




        public virtual bool SearchMembers(string query)
        {
            ListDictionary parameters = new ListDictionary();

            parameters.Add(new SqlParameter("@query", SqlDbType.NVarChar, 50), query);

            return LoadFromSql("SearchMembers", parameters);

        }

        public virtual bool SearchMembersExceptFriends(string query, int MemberID)
        {
            ListDictionary parameters = new ListDictionary();
            parameters.Add(new SqlParameter("@MemberID", SqlDbType.Int, 0), MemberID);
            parameters.Add(new SqlParameter("@query", SqlDbType.NVarChar, 50), query);

            return LoadFromSql("SearchMembersExceptFriends", parameters);

        }

        public bool GetByName(string name)
        {
            Where.Name.Value = name;
            return Query.Load();

        }

        private static List<Member> lstSiteMembers;
        public static List<Member> SiteMembers
        {
            get
            {
                if (lstSiteMembers == null)
                {
                    lstSiteMembers = Helper.EnumUtil.GetValues<Helper.Enums.SiteMembers>().Select(m => GetSiteMember(Helper.StringEnum.GetStringValue(m))
                        ).ToList();
                }
                return lstSiteMembers;
            }
        }
        private static Member GetSiteMember(string name)
        {
            Member member = new Member();
            if (!member.GetByName(name))
            {
                member.AddNew();
                member.Name = name;
                member.Save();
            }
            return member;
        }
    }
}
