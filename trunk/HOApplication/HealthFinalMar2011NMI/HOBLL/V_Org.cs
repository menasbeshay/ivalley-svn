/*
'===============================================================================
'  Generated From - CSharp_dOOdads_View.vbgen
'
'  The supporting base class SqlClientEntity is in the 
'  Architecture directory in "dOOdads".
'===============================================================================
*/

// Generated by MyGeneration Version # (1.2.0.7)

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;

using MyGeneration.dOOdads;

namespace MHO.BLL
{
	public class V_Org : SqlClientEntity
	{
		public V_Org()
		{
			this.QuerySource = "V_Org";
			this.MappingName = "V_Org";
		}	
	
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public bool LoadAll() 
		{
			return base.Query.Load();
		}
		
		public override void FlushData()
		{
			this._whereClause = null;
			this._aggregateClause = null;
			base.FlushData();
		}
	
		#region Parameters
		protected class Parameters
		{
			
			public static SqlParameter PoliceID
			{
				get
				{
					return new SqlParameter("@PoliceID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter PoliceName
			{
				get
				{
					return new SqlParameter("@PoliceName", SqlDbType.Char, 30);
				}
			}
			
			public static SqlParameter GoveID
			{
				get
				{
					return new SqlParameter("@GoveID", SqlDbType.SmallInt, 0);
				}
			}
			
			public static SqlParameter GoveName
			{
				get
				{
					return new SqlParameter("@GoveName", SqlDbType.Char, 20);
				}
			}
			
			public static SqlParameter AreaID
			{
				get
				{
					return new SqlParameter("@AreaID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter AreaName
			{
				get
				{
					return new SqlParameter("@AreaName", SqlDbType.Char, 20);
				}
			}
			
			public static SqlParameter OrgID
			{
				get
				{
					return new SqlParameter("@OrgID", SqlDbType.UniqueIdentifier, 0);
				}
			}
			
			public static SqlParameter OrgParentID
			{
				get
				{
					return new SqlParameter("@OrgParentID", SqlDbType.UniqueIdentifier, 0);
				}
			}
			
			public static SqlParameter OrgDescription
			{
				get
				{
					return new SqlParameter("@OrgDescription", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter OrgType
			{
				get
				{
					return new SqlParameter("@OrgType", SqlDbType.Bit, 0);
				}
			}
			
		}
		#endregion	
	
		#region ColumnNames
		public class ColumnNames
		{  
            public const string PoliceID = "PoliceID";
            public const string PoliceName = "PoliceName";
            public const string GoveID = "GoveID";
            public const string GoveName = "GoveName";
            public const string AreaID = "AreaID";
            public const string AreaName = "AreaName";
            public const string OrgID = "OrgID";
            public const string OrgParentID = "OrgParentID";
            public const string OrgDescription = "OrgDescription";
            public const string OrgType = "OrgType";

			static public string ToPropertyName(string columnName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[PoliceID] = V_Org.PropertyNames.PoliceID;
					ht[PoliceName] = V_Org.PropertyNames.PoliceName;
					ht[GoveID] = V_Org.PropertyNames.GoveID;
					ht[GoveName] = V_Org.PropertyNames.GoveName;
					ht[AreaID] = V_Org.PropertyNames.AreaID;
					ht[AreaName] = V_Org.PropertyNames.AreaName;
					ht[OrgID] = V_Org.PropertyNames.OrgID;
					ht[OrgParentID] = V_Org.PropertyNames.OrgParentID;
					ht[OrgDescription] = V_Org.PropertyNames.OrgDescription;
					ht[OrgType] = V_Org.PropertyNames.OrgType;

				}
				return (string)ht[columnName];
			}

			static private Hashtable ht = null;			 
		}
		#endregion
		
		#region PropertyNames
		public class PropertyNames
		{  
            public const string PoliceID = "PoliceID";
            public const string PoliceName = "PoliceName";
            public const string GoveID = "GoveID";
            public const string GoveName = "GoveName";
            public const string AreaID = "AreaID";
            public const string AreaName = "AreaName";
            public const string OrgID = "OrgID";
            public const string OrgParentID = "OrgParentID";
            public const string OrgDescription = "OrgDescription";
            public const string OrgType = "OrgType";

			static public string ToColumnName(string propertyName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[PoliceID] = V_Org.ColumnNames.PoliceID;
					ht[PoliceName] = V_Org.ColumnNames.PoliceName;
					ht[GoveID] = V_Org.ColumnNames.GoveID;
					ht[GoveName] = V_Org.ColumnNames.GoveName;
					ht[AreaID] = V_Org.ColumnNames.AreaID;
					ht[AreaName] = V_Org.ColumnNames.AreaName;
					ht[OrgID] = V_Org.ColumnNames.OrgID;
					ht[OrgParentID] = V_Org.ColumnNames.OrgParentID;
					ht[OrgDescription] = V_Org.ColumnNames.OrgDescription;
					ht[OrgType] = V_Org.ColumnNames.OrgType;

				}
				return (string)ht[propertyName];
			}

			static private Hashtable ht = null;			 
		}			 
		#endregion

		#region StringPropertyNames
		public class StringPropertyNames
		{  
            public const string PoliceID = "s_PoliceID";
            public const string PoliceName = "s_PoliceName";
            public const string GoveID = "s_GoveID";
            public const string GoveName = "s_GoveName";
            public const string AreaID = "s_AreaID";
            public const string AreaName = "s_AreaName";
            public const string OrgID = "s_OrgID";
            public const string OrgParentID = "s_OrgParentID";
            public const string OrgDescription = "s_OrgDescription";
            public const string OrgType = "s_OrgType";

		}
		#endregion	
		
		#region Properties
			public virtual int PoliceID
	    {
			get
	        {
				return base.Getint(ColumnNames.PoliceID);
			}
			set
	        {
				base.Setint(ColumnNames.PoliceID, value);
			}
		}

		public virtual string PoliceName
	    {
			get
	        {
				return base.Getstring(ColumnNames.PoliceName);
			}
			set
	        {
				base.Setstring(ColumnNames.PoliceName, value);
			}
		}

		public virtual short GoveID
	    {
			get
	        {
				return base.Getshort(ColumnNames.GoveID);
			}
			set
	        {
				base.Setshort(ColumnNames.GoveID, value);
			}
		}

		public virtual string GoveName
	    {
			get
	        {
				return base.Getstring(ColumnNames.GoveName);
			}
			set
	        {
				base.Setstring(ColumnNames.GoveName, value);
			}
		}

		public virtual int AreaID
	    {
			get
	        {
				return base.Getint(ColumnNames.AreaID);
			}
			set
	        {
				base.Setint(ColumnNames.AreaID, value);
			}
		}

		public virtual string AreaName
	    {
			get
	        {
				return base.Getstring(ColumnNames.AreaName);
			}
			set
	        {
				base.Setstring(ColumnNames.AreaName, value);
			}
		}

		public virtual Guid OrgID
	    {
			get
	        {
				return base.GetGuid(ColumnNames.OrgID);
			}
			set
	        {
				base.SetGuid(ColumnNames.OrgID, value);
			}
		}

		public virtual Guid OrgParentID
	    {
			get
	        {
				return base.GetGuid(ColumnNames.OrgParentID);
			}
			set
	        {
				base.SetGuid(ColumnNames.OrgParentID, value);
			}
		}

		public virtual string OrgDescription
	    {
			get
	        {
				return base.Getstring(ColumnNames.OrgDescription);
			}
			set
	        {
				base.Setstring(ColumnNames.OrgDescription, value);
			}
		}

		public virtual bool OrgType
	    {
			get
	        {
				return base.Getbool(ColumnNames.OrgType);
			}
			set
	        {
				base.Setbool(ColumnNames.OrgType, value);
			}
		}


		#endregion
		
		#region String Properties
	
		public virtual string s_PoliceID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.PoliceID) ? string.Empty : base.GetintAsString(ColumnNames.PoliceID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.PoliceID);
				else
					this.PoliceID = base.SetintAsString(ColumnNames.PoliceID, value);
			}
		}

		public virtual string s_PoliceName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.PoliceName) ? string.Empty : base.GetstringAsString(ColumnNames.PoliceName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.PoliceName);
				else
					this.PoliceName = base.SetstringAsString(ColumnNames.PoliceName, value);
			}
		}

		public virtual string s_GoveID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.GoveID) ? string.Empty : base.GetshortAsString(ColumnNames.GoveID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.GoveID);
				else
					this.GoveID = base.SetshortAsString(ColumnNames.GoveID, value);
			}
		}

		public virtual string s_GoveName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.GoveName) ? string.Empty : base.GetstringAsString(ColumnNames.GoveName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.GoveName);
				else
					this.GoveName = base.SetstringAsString(ColumnNames.GoveName, value);
			}
		}

		public virtual string s_AreaID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AreaID) ? string.Empty : base.GetintAsString(ColumnNames.AreaID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AreaID);
				else
					this.AreaID = base.SetintAsString(ColumnNames.AreaID, value);
			}
		}

		public virtual string s_AreaName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AreaName) ? string.Empty : base.GetstringAsString(ColumnNames.AreaName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AreaName);
				else
					this.AreaName = base.SetstringAsString(ColumnNames.AreaName, value);
			}
		}

		public virtual string s_OrgID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.OrgID) ? string.Empty : base.GetGuidAsString(ColumnNames.OrgID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.OrgID);
				else
					this.OrgID = base.SetGuidAsString(ColumnNames.OrgID, value);
			}
		}

		public virtual string s_OrgParentID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.OrgParentID) ? string.Empty : base.GetGuidAsString(ColumnNames.OrgParentID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.OrgParentID);
				else
					this.OrgParentID = base.SetGuidAsString(ColumnNames.OrgParentID, value);
			}
		}

		public virtual string s_OrgDescription
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.OrgDescription) ? string.Empty : base.GetstringAsString(ColumnNames.OrgDescription);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.OrgDescription);
				else
					this.OrgDescription = base.SetstringAsString(ColumnNames.OrgDescription, value);
			}
		}

		public virtual string s_OrgType
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.OrgType) ? string.Empty : base.GetboolAsString(ColumnNames.OrgType);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.OrgType);
				else
					this.OrgType = base.SetboolAsString(ColumnNames.OrgType, value);
			}
		}


		#endregion			
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region WhereParameter TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter PoliceID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.PoliceID, Parameters.PoliceID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter PoliceName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.PoliceName, Parameters.PoliceName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter GoveID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.GoveID, Parameters.GoveID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter GoveName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.GoveName, Parameters.GoveName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AreaID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AreaID, Parameters.AreaID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AreaName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AreaName, Parameters.AreaName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter OrgID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.OrgID, Parameters.OrgID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter OrgParentID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.OrgParentID, Parameters.OrgParentID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter OrgDescription
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.OrgDescription, Parameters.OrgDescription);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter OrgType
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.OrgType, Parameters.OrgType);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter PoliceID
		    {
				get
		        {
					if(_PoliceID_W == null)
	        	    {
						_PoliceID_W = TearOff.PoliceID;
					}
					return _PoliceID_W;
				}
			}

			public WhereParameter PoliceName
		    {
				get
		        {
					if(_PoliceName_W == null)
	        	    {
						_PoliceName_W = TearOff.PoliceName;
					}
					return _PoliceName_W;
				}
			}

			public WhereParameter GoveID
		    {
				get
		        {
					if(_GoveID_W == null)
	        	    {
						_GoveID_W = TearOff.GoveID;
					}
					return _GoveID_W;
				}
			}

			public WhereParameter GoveName
		    {
				get
		        {
					if(_GoveName_W == null)
	        	    {
						_GoveName_W = TearOff.GoveName;
					}
					return _GoveName_W;
				}
			}

			public WhereParameter AreaID
		    {
				get
		        {
					if(_AreaID_W == null)
	        	    {
						_AreaID_W = TearOff.AreaID;
					}
					return _AreaID_W;
				}
			}

			public WhereParameter AreaName
		    {
				get
		        {
					if(_AreaName_W == null)
	        	    {
						_AreaName_W = TearOff.AreaName;
					}
					return _AreaName_W;
				}
			}

			public WhereParameter OrgID
		    {
				get
		        {
					if(_OrgID_W == null)
	        	    {
						_OrgID_W = TearOff.OrgID;
					}
					return _OrgID_W;
				}
			}

			public WhereParameter OrgParentID
		    {
				get
		        {
					if(_OrgParentID_W == null)
	        	    {
						_OrgParentID_W = TearOff.OrgParentID;
					}
					return _OrgParentID_W;
				}
			}

			public WhereParameter OrgDescription
		    {
				get
		        {
					if(_OrgDescription_W == null)
	        	    {
						_OrgDescription_W = TearOff.OrgDescription;
					}
					return _OrgDescription_W;
				}
			}

			public WhereParameter OrgType
		    {
				get
		        {
					if(_OrgType_W == null)
	        	    {
						_OrgType_W = TearOff.OrgType;
					}
					return _OrgType_W;
				}
			}

			private WhereParameter _PoliceID_W = null;
			private WhereParameter _PoliceName_W = null;
			private WhereParameter _GoveID_W = null;
			private WhereParameter _GoveName_W = null;
			private WhereParameter _AreaID_W = null;
			private WhereParameter _AreaName_W = null;
			private WhereParameter _OrgID_W = null;
			private WhereParameter _OrgParentID_W = null;
			private WhereParameter _OrgDescription_W = null;
			private WhereParameter _OrgType_W = null;

			public void WhereClauseReset()
			{
				_PoliceID_W = null;
				_PoliceName_W = null;
				_GoveID_W = null;
				_GoveName_W = null;
				_AreaID_W = null;
				_AreaName_W = null;
				_OrgID_W = null;
				_OrgParentID_W = null;
				_OrgDescription_W = null;
				_OrgType_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
	
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region AggregateParameter TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter PoliceID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.PoliceID, Parameters.PoliceID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter PoliceName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.PoliceName, Parameters.PoliceName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter GoveID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.GoveID, Parameters.GoveID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter GoveName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.GoveName, Parameters.GoveName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AreaID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AreaID, Parameters.AreaID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AreaName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AreaName, Parameters.AreaName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter OrgID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.OrgID, Parameters.OrgID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter OrgParentID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.OrgParentID, Parameters.OrgParentID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter OrgDescription
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.OrgDescription, Parameters.OrgDescription);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter OrgType
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.OrgType, Parameters.OrgType);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter PoliceID
		    {
				get
		        {
					if(_PoliceID_W == null)
	        	    {
						_PoliceID_W = TearOff.PoliceID;
					}
					return _PoliceID_W;
				}
			}

			public AggregateParameter PoliceName
		    {
				get
		        {
					if(_PoliceName_W == null)
	        	    {
						_PoliceName_W = TearOff.PoliceName;
					}
					return _PoliceName_W;
				}
			}

			public AggregateParameter GoveID
		    {
				get
		        {
					if(_GoveID_W == null)
	        	    {
						_GoveID_W = TearOff.GoveID;
					}
					return _GoveID_W;
				}
			}

			public AggregateParameter GoveName
		    {
				get
		        {
					if(_GoveName_W == null)
	        	    {
						_GoveName_W = TearOff.GoveName;
					}
					return _GoveName_W;
				}
			}

			public AggregateParameter AreaID
		    {
				get
		        {
					if(_AreaID_W == null)
	        	    {
						_AreaID_W = TearOff.AreaID;
					}
					return _AreaID_W;
				}
			}

			public AggregateParameter AreaName
		    {
				get
		        {
					if(_AreaName_W == null)
	        	    {
						_AreaName_W = TearOff.AreaName;
					}
					return _AreaName_W;
				}
			}

			public AggregateParameter OrgID
		    {
				get
		        {
					if(_OrgID_W == null)
	        	    {
						_OrgID_W = TearOff.OrgID;
					}
					return _OrgID_W;
				}
			}

			public AggregateParameter OrgParentID
		    {
				get
		        {
					if(_OrgParentID_W == null)
	        	    {
						_OrgParentID_W = TearOff.OrgParentID;
					}
					return _OrgParentID_W;
				}
			}

			public AggregateParameter OrgDescription
		    {
				get
		        {
					if(_OrgDescription_W == null)
	        	    {
						_OrgDescription_W = TearOff.OrgDescription;
					}
					return _OrgDescription_W;
				}
			}

			public AggregateParameter OrgType
		    {
				get
		        {
					if(_OrgType_W == null)
	        	    {
						_OrgType_W = TearOff.OrgType;
					}
					return _OrgType_W;
				}
			}

			private AggregateParameter _PoliceID_W = null;
			private AggregateParameter _PoliceName_W = null;
			private AggregateParameter _GoveID_W = null;
			private AggregateParameter _GoveName_W = null;
			private AggregateParameter _AreaID_W = null;
			private AggregateParameter _AreaName_W = null;
			private AggregateParameter _OrgID_W = null;
			private AggregateParameter _OrgParentID_W = null;
			private AggregateParameter _OrgDescription_W = null;
			private AggregateParameter _OrgType_W = null;

			public void AggregateClauseReset()
			{
				_PoliceID_W = null;
				_PoliceName_W = null;
				_GoveID_W = null;
				_GoveName_W = null;
				_AreaID_W = null;
				_AreaName_W = null;
				_OrgID_W = null;
				_OrgParentID_W = null;
				_OrgDescription_W = null;
				_OrgType_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	
		protected override IDbCommand GetInsertCommand() 
		{
			return null;
		}
	
		protected override IDbCommand GetUpdateCommand()
		{
			return null;
		}
	
		protected override IDbCommand GetDeleteCommand()
		{
			return null;
		}
	}
}
