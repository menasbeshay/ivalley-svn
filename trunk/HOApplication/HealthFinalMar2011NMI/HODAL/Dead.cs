
/*
'===============================================================================
'  Generated From - CSharp_dOOdads_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class SqlClientEntity is in the Architecture directory in "dOOdads".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;

using MyGeneration.dOOdads;

namespace MHO.DAL
{
	public abstract class _Dead : SqlClientEntity
	{
		public _Dead()
		{
			this.QuerySource = "Dead";
			this.MappingName = "Dead";

		}	

		//=================================================================
		//  public Overrides void AddNew()
		//=================================================================
		//
		//=================================================================
		public override void AddNew()
		{
			base.AddNew();
			
		}
		
		
		public override void FlushData()
		{
			this._whereClause = null;
			this._aggregateClause = null;
			base.FlushData();
		}
		
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public bool LoadAll() 
		{
			ListDictionary parameters = null;
			
			return base.LoadFromSql("[" + this.SchemaStoredProcedure + "proc_DeadLoadAll]", parameters);
		}
	
		//=================================================================
		// public Overridable Function LoadByPrimaryKey()  As Boolean
		//=================================================================
		//  Loads a single row of via the primary key
		//=================================================================
		public virtual bool LoadByPrimaryKey(Guid DeadEventID)
		{
			ListDictionary parameters = new ListDictionary();
			parameters.Add(Parameters.DeadEventID, DeadEventID);

		
			return base.LoadFromSql("[" + this.SchemaStoredProcedure + "proc_DeadLoadByPrimaryKey]", parameters);
		}
		
		#region Parameters
		protected class Parameters
		{
			
			public static SqlParameter DeadEventID
			{
				get
				{
					return new SqlParameter("@DeadEventID", SqlDbType.UniqueIdentifier, 0);
				}
			}
			
			public static SqlParameter DeadNID
			{
				get
				{
					return new SqlParameter("@DeadNID", SqlDbType.Char, 14);
				}
			}
			
			public static SqlParameter DeadGender
			{
				get
				{
					return new SqlParameter("@DeadGender", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter DeadFirstName
			{
				get
				{
					return new SqlParameter("@DeadFirstName", SqlDbType.NVarChar, 20);
				}
			}
			
			public static SqlParameter DeadFatherName
			{
				get
				{
					return new SqlParameter("@DeadFatherName", SqlDbType.NVarChar, 20);
				}
			}
			
			public static SqlParameter DeadGrandName
			{
				get
				{
					return new SqlParameter("@DeadGrandName", SqlDbType.NVarChar, 20);
				}
			}
			
			public static SqlParameter DeadFamilyName
			{
				get
				{
					return new SqlParameter("@DeadFamilyName", SqlDbType.NVarChar, 20);
				}
			}
			
			public static SqlParameter DeadNationality
			{
				get
				{
					return new SqlParameter("@DeadNationality", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter DeadReligion
			{
				get
				{
					return new SqlParameter("@DeadReligion", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter DeadMartialStatus
			{
				get
				{
					return new SqlParameter("@DeadMartialStatus", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter PaperID
			{
				get
				{
					return new SqlParameter("@PaperID", SqlDbType.NVarChar, 10);
				}
			}
			
			public static SqlParameter PaperIDType
			{
				get
				{
					return new SqlParameter("@PaperIDType", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter PaperIssuePlace
			{
				get
				{
					return new SqlParameter("@PaperIssuePlace", SqlDbType.NVarChar, 25);
				}
			}
			
			public static SqlParameter AddressNo
			{
				get
				{
					return new SqlParameter("@AddressNo", SqlDbType.Char, 5);
				}
			}
			
			public static SqlParameter AddressStreet
			{
				get
				{
					return new SqlParameter("@AddressStreet", SqlDbType.NVarChar, 25);
				}
			}
			
			public static SqlParameter AddressFeatured
			{
				get
				{
					return new SqlParameter("@AddressFeatured", SqlDbType.NVarChar, 25);
				}
			}
			
			public static SqlParameter DeadGovernorate
			{
				get
				{
					return new SqlParameter("@DeadGovernorate", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter DeadSection
			{
				get
				{
					return new SqlParameter("@DeadSection", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter DeadArea
			{
				get
				{
					return new SqlParameter("@DeadArea", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter DeadPhone
			{
				get
				{
					return new SqlParameter("@DeadPhone", SqlDbType.NVarChar, 20);
				}
			}
			
			public static SqlParameter DeadJob
			{
				get
				{
					return new SqlParameter("@DeadJob", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter DeadBirthDate
			{
				get
				{
					return new SqlParameter("@DeadBirthDate", SqlDbType.SmallDateTime, 0);
				}
			}
			
			public static SqlParameter DeadDieDate
			{
				get
				{
					return new SqlParameter("@DeadDieDate", SqlDbType.SmallDateTime, 0);
				}
			}
			
			public static SqlParameter DeadDieHour
			{
				get
				{
					return new SqlParameter("@DeadDieHour", SqlDbType.NVarChar, 20);
				}
			}
			
			public static SqlParameter DeadDieMin
			{
				get
				{
					return new SqlParameter("@DeadDieMin", SqlDbType.NVarChar, 20);
				}
			}
			
			public static SqlParameter DiePlace
			{
				get
				{
					return new SqlParameter("@DiePlace", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter DiePlaceDescription
			{
				get
				{
					return new SqlParameter("@DiePlaceDescription", SqlDbType.NVarChar, 100);
				}
			}
			
			public static SqlParameter DieGovernorate
			{
				get
				{
					return new SqlParameter("@DieGovernorate", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter DieSection
			{
				get
				{
					return new SqlParameter("@DieSection", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter DieArea
			{
				get
				{
					return new SqlParameter("@DieArea", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter DeadMotherNID
			{
				get
				{
					return new SqlParameter("@DeadMotherNID", SqlDbType.Char, 14);
				}
			}
			
			public static SqlParameter DeadMotherNationality
			{
				get
				{
					return new SqlParameter("@DeadMotherNationality", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter DeadMotherFirstName
			{
				get
				{
					return new SqlParameter("@DeadMotherFirstName", SqlDbType.NVarChar, 20);
				}
			}
			
			public static SqlParameter DeadMotherSecondName
			{
				get
				{
					return new SqlParameter("@DeadMotherSecondName", SqlDbType.NVarChar, 20);
				}
			}
			
			public static SqlParameter DeadMotherFamilyName
			{
				get
				{
					return new SqlParameter("@DeadMotherFamilyName", SqlDbType.NVarChar, 20);
				}
			}
			
			public static SqlParameter DeadMotherReligion
			{
				get
				{
					return new SqlParameter("@DeadMotherReligion", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter DeadMotherJob
			{
				get
				{
					return new SqlParameter("@DeadMotherJob", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter DaadMotherSureName
			{
				get
				{
					return new SqlParameter("@DaadMotherSureName", SqlDbType.NVarChar, 20);
				}
			}
			
			public static SqlParameter InformerRelation
			{
				get
				{
					return new SqlParameter("@InformerRelation", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter InformerNID
			{
				get
				{
					return new SqlParameter("@InformerNID", SqlDbType.Char, 14);
				}
			}
			
			public static SqlParameter InformerFirstName
			{
				get
				{
					return new SqlParameter("@InformerFirstName", SqlDbType.NVarChar, 20);
				}
			}
			
			public static SqlParameter InformerSecondName
			{
				get
				{
					return new SqlParameter("@InformerSecondName", SqlDbType.NVarChar, 20);
				}
			}
			
			public static SqlParameter InformerPhone
			{
				get
				{
					return new SqlParameter("@InformerPhone", SqlDbType.NVarChar, 20);
				}
			}
			
			public static SqlParameter InformerAddress
			{
				get
				{
					return new SqlParameter("@InformerAddress", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter DeadAge
			{
				get
				{
					return new SqlParameter("@DeadAge", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter RegisterID
			{
				get
				{
					return new SqlParameter("@RegisterID", SqlDbType.UniqueIdentifier, 0);
				}
			}
			
			public static SqlParameter RegisterNo
			{
				get
				{
					return new SqlParameter("@RegisterNo", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter RegisterDate
			{
				get
				{
					return new SqlParameter("@RegisterDate", SqlDbType.SmallDateTime, 0);
				}
			}
			
			public static SqlParameter DeadDecisionNo
			{
				get
				{
					return new SqlParameter("@DeadDecisionNo", SqlDbType.NVarChar, 10);
				}
			}
			
			public static SqlParameter DeadDecisionDirection
			{
				get
				{
					return new SqlParameter("@DeadDecisionDirection", SqlDbType.NVarChar, 20);
				}
			}
			
			public static SqlParameter DeadDecisionDate
			{
				get
				{
					return new SqlParameter("@DeadDecisionDate", SqlDbType.SmallDateTime, 0);
				}
			}
			
			public static SqlParameter DeadDecisionNotes
			{
				get
				{
					return new SqlParameter("@DeadDecisionNotes", SqlDbType.NVarChar, 25);
				}
			}
			
			public static SqlParameter OrgID
			{
				get
				{
					return new SqlParameter("@OrgID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Approved
			{
				get
				{
					return new SqlParameter("@Approved", SqlDbType.Bit, 0);
				}
			}
			
			public static SqlParameter HasHealthData
			{
				get
				{
					return new SqlParameter("@HasHealthData", SqlDbType.Bit, 0);
				}
			}
			
			public static SqlParameter ProveNumber
			{
				get
				{
					return new SqlParameter("@ProveNumber", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter ProveText
			{
				get
				{
					return new SqlParameter("@ProveText", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter MotherProveNumber
			{
				get
				{
					return new SqlParameter("@MotherProveNumber", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter MotherProveText
			{
				get
				{
					return new SqlParameter("@MotherProveText", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter IsUnKown
			{
				get
				{
					return new SqlParameter("@IsUnKown", SqlDbType.Bit, 0);
				}
			}
			
			public static SqlParameter IsBornDead
			{
				get
				{
					return new SqlParameter("@IsBornDead", SqlDbType.Bit, 0);
				}
			}
			
			public static SqlParameter WriterID
			{
				get
				{
					return new SqlParameter("@WriterID", SqlDbType.UniqueIdentifier, 0);
				}
			}
			
			public static SqlParameter DoctorID
			{
				get
				{
					return new SqlParameter("@DoctorID", SqlDbType.UniqueIdentifier, 0);
				}
			}
			
			public static SqlParameter DeadFamilyPhone
			{
				get
				{
					return new SqlParameter("@DeadFamilyPhone", SqlDbType.NVarChar, 20);
				}
			}
			
			public static SqlParameter DeadJobDesc
			{
				get
				{
					return new SqlParameter("@DeadJobDesc", SqlDbType.NVarChar, 500);
				}
			}
			
		}
		#endregion		
	
		#region ColumnNames
		public class ColumnNames
		{  
            public const string DeadEventID = "DeadEventID";
            public const string DeadNID = "DeadNID";
            public const string DeadGender = "DeadGender";
            public const string DeadFirstName = "DeadFirstName";
            public const string DeadFatherName = "DeadFatherName";
            public const string DeadGrandName = "DeadGrandName";
            public const string DeadFamilyName = "DeadFamilyName";
            public const string DeadNationality = "DeadNationality";
            public const string DeadReligion = "DeadReligion";
            public const string DeadMartialStatus = "DeadMartialStatus";
            public const string PaperID = "PaperID";
            public const string PaperIDType = "PaperIDType";
            public const string PaperIssuePlace = "PaperIssuePlace";
            public const string AddressNo = "AddressNo";
            public const string AddressStreet = "AddressStreet";
            public const string AddressFeatured = "AddressFeatured";
            public const string DeadGovernorate = "DeadGovernorate";
            public const string DeadSection = "DeadSection";
            public const string DeadArea = "DeadArea";
            public const string DeadPhone = "DeadPhone";
            public const string DeadJob = "DeadJob";
            public const string DeadBirthDate = "DeadBirthDate";
            public const string DeadDieDate = "DeadDieDate";
            public const string DeadDieHour = "DeadDieHour";
            public const string DeadDieMin = "DeadDieMin";
            public const string DiePlace = "DiePlace";
            public const string DiePlaceDescription = "DiePlaceDescription";
            public const string DieGovernorate = "DieGovernorate";
            public const string DieSection = "DieSection";
            public const string DieArea = "DieArea";
            public const string DeadMotherNID = "DeadMotherNID";
            public const string DeadMotherNationality = "DeadMotherNationality";
            public const string DeadMotherFirstName = "DeadMotherFirstName";
            public const string DeadMotherSecondName = "DeadMotherSecondName";
            public const string DeadMotherFamilyName = "DeadMotherFamilyName";
            public const string DeadMotherReligion = "DeadMotherReligion";
            public const string DeadMotherJob = "DeadMotherJob";
            public const string DaadMotherSureName = "DaadMotherSureName";
            public const string InformerRelation = "InformerRelation";
            public const string InformerNID = "InformerNID";
            public const string InformerFirstName = "InformerFirstName";
            public const string InformerSecondName = "InformerSecondName";
            public const string InformerPhone = "InformerPhone";
            public const string InformerAddress = "InformerAddress";
            public const string DeadAge = "DeadAge";
            public const string RegisterID = "RegisterID";
            public const string RegisterNo = "RegisterNo";
            public const string RegisterDate = "RegisterDate";
            public const string DeadDecisionNo = "DeadDecisionNo";
            public const string DeadDecisionDirection = "DeadDecisionDirection";
            public const string DeadDecisionDate = "DeadDecisionDate";
            public const string DeadDecisionNotes = "DeadDecisionNotes";
            public const string OrgID = "OrgID";
            public const string Approved = "Approved";
            public const string HasHealthData = "HasHealthData";
            public const string ProveNumber = "ProveNumber";
            public const string ProveText = "ProveText";
            public const string MotherProveNumber = "MotherProveNumber";
            public const string MotherProveText = "MotherProveText";
            public const string IsUnKown = "IsUnKown";
            public const string IsBornDead = "IsBornDead";
            public const string WriterID = "WriterID";
            public const string DoctorID = "DoctorID";
            public const string DeadFamilyPhone = "DeadFamilyPhone";
            public const string DeadJobDesc = "DeadJobDesc";

			static public string ToPropertyName(string columnName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[DeadEventID] = _Dead.PropertyNames.DeadEventID;
					ht[DeadNID] = _Dead.PropertyNames.DeadNID;
					ht[DeadGender] = _Dead.PropertyNames.DeadGender;
					ht[DeadFirstName] = _Dead.PropertyNames.DeadFirstName;
					ht[DeadFatherName] = _Dead.PropertyNames.DeadFatherName;
					ht[DeadGrandName] = _Dead.PropertyNames.DeadGrandName;
					ht[DeadFamilyName] = _Dead.PropertyNames.DeadFamilyName;
					ht[DeadNationality] = _Dead.PropertyNames.DeadNationality;
					ht[DeadReligion] = _Dead.PropertyNames.DeadReligion;
					ht[DeadMartialStatus] = _Dead.PropertyNames.DeadMartialStatus;
					ht[PaperID] = _Dead.PropertyNames.PaperID;
					ht[PaperIDType] = _Dead.PropertyNames.PaperIDType;
					ht[PaperIssuePlace] = _Dead.PropertyNames.PaperIssuePlace;
					ht[AddressNo] = _Dead.PropertyNames.AddressNo;
					ht[AddressStreet] = _Dead.PropertyNames.AddressStreet;
					ht[AddressFeatured] = _Dead.PropertyNames.AddressFeatured;
					ht[DeadGovernorate] = _Dead.PropertyNames.DeadGovernorate;
					ht[DeadSection] = _Dead.PropertyNames.DeadSection;
					ht[DeadArea] = _Dead.PropertyNames.DeadArea;
					ht[DeadPhone] = _Dead.PropertyNames.DeadPhone;
					ht[DeadJob] = _Dead.PropertyNames.DeadJob;
					ht[DeadBirthDate] = _Dead.PropertyNames.DeadBirthDate;
					ht[DeadDieDate] = _Dead.PropertyNames.DeadDieDate;
					ht[DeadDieHour] = _Dead.PropertyNames.DeadDieHour;
					ht[DeadDieMin] = _Dead.PropertyNames.DeadDieMin;
					ht[DiePlace] = _Dead.PropertyNames.DiePlace;
					ht[DiePlaceDescription] = _Dead.PropertyNames.DiePlaceDescription;
					ht[DieGovernorate] = _Dead.PropertyNames.DieGovernorate;
					ht[DieSection] = _Dead.PropertyNames.DieSection;
					ht[DieArea] = _Dead.PropertyNames.DieArea;
					ht[DeadMotherNID] = _Dead.PropertyNames.DeadMotherNID;
					ht[DeadMotherNationality] = _Dead.PropertyNames.DeadMotherNationality;
					ht[DeadMotherFirstName] = _Dead.PropertyNames.DeadMotherFirstName;
					ht[DeadMotherSecondName] = _Dead.PropertyNames.DeadMotherSecondName;
					ht[DeadMotherFamilyName] = _Dead.PropertyNames.DeadMotherFamilyName;
					ht[DeadMotherReligion] = _Dead.PropertyNames.DeadMotherReligion;
					ht[DeadMotherJob] = _Dead.PropertyNames.DeadMotherJob;
					ht[DaadMotherSureName] = _Dead.PropertyNames.DaadMotherSureName;
					ht[InformerRelation] = _Dead.PropertyNames.InformerRelation;
					ht[InformerNID] = _Dead.PropertyNames.InformerNID;
					ht[InformerFirstName] = _Dead.PropertyNames.InformerFirstName;
					ht[InformerSecondName] = _Dead.PropertyNames.InformerSecondName;
					ht[InformerPhone] = _Dead.PropertyNames.InformerPhone;
					ht[InformerAddress] = _Dead.PropertyNames.InformerAddress;
					ht[DeadAge] = _Dead.PropertyNames.DeadAge;
					ht[RegisterID] = _Dead.PropertyNames.RegisterID;
					ht[RegisterNo] = _Dead.PropertyNames.RegisterNo;
					ht[RegisterDate] = _Dead.PropertyNames.RegisterDate;
					ht[DeadDecisionNo] = _Dead.PropertyNames.DeadDecisionNo;
					ht[DeadDecisionDirection] = _Dead.PropertyNames.DeadDecisionDirection;
					ht[DeadDecisionDate] = _Dead.PropertyNames.DeadDecisionDate;
					ht[DeadDecisionNotes] = _Dead.PropertyNames.DeadDecisionNotes;
					ht[OrgID] = _Dead.PropertyNames.OrgID;
					ht[Approved] = _Dead.PropertyNames.Approved;
					ht[HasHealthData] = _Dead.PropertyNames.HasHealthData;
					ht[ProveNumber] = _Dead.PropertyNames.ProveNumber;
					ht[ProveText] = _Dead.PropertyNames.ProveText;
					ht[MotherProveNumber] = _Dead.PropertyNames.MotherProveNumber;
					ht[MotherProveText] = _Dead.PropertyNames.MotherProveText;
					ht[IsUnKown] = _Dead.PropertyNames.IsUnKown;
					ht[IsBornDead] = _Dead.PropertyNames.IsBornDead;
					ht[WriterID] = _Dead.PropertyNames.WriterID;
					ht[DoctorID] = _Dead.PropertyNames.DoctorID;
					ht[DeadFamilyPhone] = _Dead.PropertyNames.DeadFamilyPhone;
					ht[DeadJobDesc] = _Dead.PropertyNames.DeadJobDesc;

				}
				return (string)ht[columnName];
			}

			static private Hashtable ht = null;			 
		}
		#endregion
		
		#region PropertyNames
		public class PropertyNames
		{  
            public const string DeadEventID = "DeadEventID";
            public const string DeadNID = "DeadNID";
            public const string DeadGender = "DeadGender";
            public const string DeadFirstName = "DeadFirstName";
            public const string DeadFatherName = "DeadFatherName";
            public const string DeadGrandName = "DeadGrandName";
            public const string DeadFamilyName = "DeadFamilyName";
            public const string DeadNationality = "DeadNationality";
            public const string DeadReligion = "DeadReligion";
            public const string DeadMartialStatus = "DeadMartialStatus";
            public const string PaperID = "PaperID";
            public const string PaperIDType = "PaperIDType";
            public const string PaperIssuePlace = "PaperIssuePlace";
            public const string AddressNo = "AddressNo";
            public const string AddressStreet = "AddressStreet";
            public const string AddressFeatured = "AddressFeatured";
            public const string DeadGovernorate = "DeadGovernorate";
            public const string DeadSection = "DeadSection";
            public const string DeadArea = "DeadArea";
            public const string DeadPhone = "DeadPhone";
            public const string DeadJob = "DeadJob";
            public const string DeadBirthDate = "DeadBirthDate";
            public const string DeadDieDate = "DeadDieDate";
            public const string DeadDieHour = "DeadDieHour";
            public const string DeadDieMin = "DeadDieMin";
            public const string DiePlace = "DiePlace";
            public const string DiePlaceDescription = "DiePlaceDescription";
            public const string DieGovernorate = "DieGovernorate";
            public const string DieSection = "DieSection";
            public const string DieArea = "DieArea";
            public const string DeadMotherNID = "DeadMotherNID";
            public const string DeadMotherNationality = "DeadMotherNationality";
            public const string DeadMotherFirstName = "DeadMotherFirstName";
            public const string DeadMotherSecondName = "DeadMotherSecondName";
            public const string DeadMotherFamilyName = "DeadMotherFamilyName";
            public const string DeadMotherReligion = "DeadMotherReligion";
            public const string DeadMotherJob = "DeadMotherJob";
            public const string DaadMotherSureName = "DaadMotherSureName";
            public const string InformerRelation = "InformerRelation";
            public const string InformerNID = "InformerNID";
            public const string InformerFirstName = "InformerFirstName";
            public const string InformerSecondName = "InformerSecondName";
            public const string InformerPhone = "InformerPhone";
            public const string InformerAddress = "InformerAddress";
            public const string DeadAge = "DeadAge";
            public const string RegisterID = "RegisterID";
            public const string RegisterNo = "RegisterNo";
            public const string RegisterDate = "RegisterDate";
            public const string DeadDecisionNo = "DeadDecisionNo";
            public const string DeadDecisionDirection = "DeadDecisionDirection";
            public const string DeadDecisionDate = "DeadDecisionDate";
            public const string DeadDecisionNotes = "DeadDecisionNotes";
            public const string OrgID = "OrgID";
            public const string Approved = "Approved";
            public const string HasHealthData = "HasHealthData";
            public const string ProveNumber = "ProveNumber";
            public const string ProveText = "ProveText";
            public const string MotherProveNumber = "MotherProveNumber";
            public const string MotherProveText = "MotherProveText";
            public const string IsUnKown = "IsUnKown";
            public const string IsBornDead = "IsBornDead";
            public const string WriterID = "WriterID";
            public const string DoctorID = "DoctorID";
            public const string DeadFamilyPhone = "DeadFamilyPhone";
            public const string DeadJobDesc = "DeadJobDesc";

			static public string ToColumnName(string propertyName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[DeadEventID] = _Dead.ColumnNames.DeadEventID;
					ht[DeadNID] = _Dead.ColumnNames.DeadNID;
					ht[DeadGender] = _Dead.ColumnNames.DeadGender;
					ht[DeadFirstName] = _Dead.ColumnNames.DeadFirstName;
					ht[DeadFatherName] = _Dead.ColumnNames.DeadFatherName;
					ht[DeadGrandName] = _Dead.ColumnNames.DeadGrandName;
					ht[DeadFamilyName] = _Dead.ColumnNames.DeadFamilyName;
					ht[DeadNationality] = _Dead.ColumnNames.DeadNationality;
					ht[DeadReligion] = _Dead.ColumnNames.DeadReligion;
					ht[DeadMartialStatus] = _Dead.ColumnNames.DeadMartialStatus;
					ht[PaperID] = _Dead.ColumnNames.PaperID;
					ht[PaperIDType] = _Dead.ColumnNames.PaperIDType;
					ht[PaperIssuePlace] = _Dead.ColumnNames.PaperIssuePlace;
					ht[AddressNo] = _Dead.ColumnNames.AddressNo;
					ht[AddressStreet] = _Dead.ColumnNames.AddressStreet;
					ht[AddressFeatured] = _Dead.ColumnNames.AddressFeatured;
					ht[DeadGovernorate] = _Dead.ColumnNames.DeadGovernorate;
					ht[DeadSection] = _Dead.ColumnNames.DeadSection;
					ht[DeadArea] = _Dead.ColumnNames.DeadArea;
					ht[DeadPhone] = _Dead.ColumnNames.DeadPhone;
					ht[DeadJob] = _Dead.ColumnNames.DeadJob;
					ht[DeadBirthDate] = _Dead.ColumnNames.DeadBirthDate;
					ht[DeadDieDate] = _Dead.ColumnNames.DeadDieDate;
					ht[DeadDieHour] = _Dead.ColumnNames.DeadDieHour;
					ht[DeadDieMin] = _Dead.ColumnNames.DeadDieMin;
					ht[DiePlace] = _Dead.ColumnNames.DiePlace;
					ht[DiePlaceDescription] = _Dead.ColumnNames.DiePlaceDescription;
					ht[DieGovernorate] = _Dead.ColumnNames.DieGovernorate;
					ht[DieSection] = _Dead.ColumnNames.DieSection;
					ht[DieArea] = _Dead.ColumnNames.DieArea;
					ht[DeadMotherNID] = _Dead.ColumnNames.DeadMotherNID;
					ht[DeadMotherNationality] = _Dead.ColumnNames.DeadMotherNationality;
					ht[DeadMotherFirstName] = _Dead.ColumnNames.DeadMotherFirstName;
					ht[DeadMotherSecondName] = _Dead.ColumnNames.DeadMotherSecondName;
					ht[DeadMotherFamilyName] = _Dead.ColumnNames.DeadMotherFamilyName;
					ht[DeadMotherReligion] = _Dead.ColumnNames.DeadMotherReligion;
					ht[DeadMotherJob] = _Dead.ColumnNames.DeadMotherJob;
					ht[DaadMotherSureName] = _Dead.ColumnNames.DaadMotherSureName;
					ht[InformerRelation] = _Dead.ColumnNames.InformerRelation;
					ht[InformerNID] = _Dead.ColumnNames.InformerNID;
					ht[InformerFirstName] = _Dead.ColumnNames.InformerFirstName;
					ht[InformerSecondName] = _Dead.ColumnNames.InformerSecondName;
					ht[InformerPhone] = _Dead.ColumnNames.InformerPhone;
					ht[InformerAddress] = _Dead.ColumnNames.InformerAddress;
					ht[DeadAge] = _Dead.ColumnNames.DeadAge;
					ht[RegisterID] = _Dead.ColumnNames.RegisterID;
					ht[RegisterNo] = _Dead.ColumnNames.RegisterNo;
					ht[RegisterDate] = _Dead.ColumnNames.RegisterDate;
					ht[DeadDecisionNo] = _Dead.ColumnNames.DeadDecisionNo;
					ht[DeadDecisionDirection] = _Dead.ColumnNames.DeadDecisionDirection;
					ht[DeadDecisionDate] = _Dead.ColumnNames.DeadDecisionDate;
					ht[DeadDecisionNotes] = _Dead.ColumnNames.DeadDecisionNotes;
					ht[OrgID] = _Dead.ColumnNames.OrgID;
					ht[Approved] = _Dead.ColumnNames.Approved;
					ht[HasHealthData] = _Dead.ColumnNames.HasHealthData;
					ht[ProveNumber] = _Dead.ColumnNames.ProveNumber;
					ht[ProveText] = _Dead.ColumnNames.ProveText;
					ht[MotherProveNumber] = _Dead.ColumnNames.MotherProveNumber;
					ht[MotherProveText] = _Dead.ColumnNames.MotherProveText;
					ht[IsUnKown] = _Dead.ColumnNames.IsUnKown;
					ht[IsBornDead] = _Dead.ColumnNames.IsBornDead;
					ht[WriterID] = _Dead.ColumnNames.WriterID;
					ht[DoctorID] = _Dead.ColumnNames.DoctorID;
					ht[DeadFamilyPhone] = _Dead.ColumnNames.DeadFamilyPhone;
					ht[DeadJobDesc] = _Dead.ColumnNames.DeadJobDesc;

				}
				return (string)ht[propertyName];
			}

			static private Hashtable ht = null;			 
		}			 
		#endregion	

		#region StringPropertyNames
		public class StringPropertyNames
		{  
            public const string DeadEventID = "s_DeadEventID";
            public const string DeadNID = "s_DeadNID";
            public const string DeadGender = "s_DeadGender";
            public const string DeadFirstName = "s_DeadFirstName";
            public const string DeadFatherName = "s_DeadFatherName";
            public const string DeadGrandName = "s_DeadGrandName";
            public const string DeadFamilyName = "s_DeadFamilyName";
            public const string DeadNationality = "s_DeadNationality";
            public const string DeadReligion = "s_DeadReligion";
            public const string DeadMartialStatus = "s_DeadMartialStatus";
            public const string PaperID = "s_PaperID";
            public const string PaperIDType = "s_PaperIDType";
            public const string PaperIssuePlace = "s_PaperIssuePlace";
            public const string AddressNo = "s_AddressNo";
            public const string AddressStreet = "s_AddressStreet";
            public const string AddressFeatured = "s_AddressFeatured";
            public const string DeadGovernorate = "s_DeadGovernorate";
            public const string DeadSection = "s_DeadSection";
            public const string DeadArea = "s_DeadArea";
            public const string DeadPhone = "s_DeadPhone";
            public const string DeadJob = "s_DeadJob";
            public const string DeadBirthDate = "s_DeadBirthDate";
            public const string DeadDieDate = "s_DeadDieDate";
            public const string DeadDieHour = "s_DeadDieHour";
            public const string DeadDieMin = "s_DeadDieMin";
            public const string DiePlace = "s_DiePlace";
            public const string DiePlaceDescription = "s_DiePlaceDescription";
            public const string DieGovernorate = "s_DieGovernorate";
            public const string DieSection = "s_DieSection";
            public const string DieArea = "s_DieArea";
            public const string DeadMotherNID = "s_DeadMotherNID";
            public const string DeadMotherNationality = "s_DeadMotherNationality";
            public const string DeadMotherFirstName = "s_DeadMotherFirstName";
            public const string DeadMotherSecondName = "s_DeadMotherSecondName";
            public const string DeadMotherFamilyName = "s_DeadMotherFamilyName";
            public const string DeadMotherReligion = "s_DeadMotherReligion";
            public const string DeadMotherJob = "s_DeadMotherJob";
            public const string DaadMotherSureName = "s_DaadMotherSureName";
            public const string InformerRelation = "s_InformerRelation";
            public const string InformerNID = "s_InformerNID";
            public const string InformerFirstName = "s_InformerFirstName";
            public const string InformerSecondName = "s_InformerSecondName";
            public const string InformerPhone = "s_InformerPhone";
            public const string InformerAddress = "s_InformerAddress";
            public const string DeadAge = "s_DeadAge";
            public const string RegisterID = "s_RegisterID";
            public const string RegisterNo = "s_RegisterNo";
            public const string RegisterDate = "s_RegisterDate";
            public const string DeadDecisionNo = "s_DeadDecisionNo";
            public const string DeadDecisionDirection = "s_DeadDecisionDirection";
            public const string DeadDecisionDate = "s_DeadDecisionDate";
            public const string DeadDecisionNotes = "s_DeadDecisionNotes";
            public const string OrgID = "s_OrgID";
            public const string Approved = "s_Approved";
            public const string HasHealthData = "s_HasHealthData";
            public const string ProveNumber = "s_ProveNumber";
            public const string ProveText = "s_ProveText";
            public const string MotherProveNumber = "s_MotherProveNumber";
            public const string MotherProveText = "s_MotherProveText";
            public const string IsUnKown = "s_IsUnKown";
            public const string IsBornDead = "s_IsBornDead";
            public const string WriterID = "s_WriterID";
            public const string DoctorID = "s_DoctorID";
            public const string DeadFamilyPhone = "s_DeadFamilyPhone";
            public const string DeadJobDesc = "s_DeadJobDesc";

		}
		#endregion		
		
		#region Properties
	
		public virtual Guid DeadEventID
	    {
			get
	        {
				return base.GetGuid(ColumnNames.DeadEventID);
			}
			set
	        {
				base.SetGuid(ColumnNames.DeadEventID, value);
			}
		}

		public virtual string DeadNID
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadNID);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadNID, value);
			}
		}

		public virtual int DeadGender
	    {
			get
	        {
				return base.Getint(ColumnNames.DeadGender);
			}
			set
	        {
				base.Setint(ColumnNames.DeadGender, value);
			}
		}

		public virtual string DeadFirstName
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadFirstName);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadFirstName, value);
			}
		}

		public virtual string DeadFatherName
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadFatherName);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadFatherName, value);
			}
		}

		public virtual string DeadGrandName
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadGrandName);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadGrandName, value);
			}
		}

		public virtual string DeadFamilyName
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadFamilyName);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadFamilyName, value);
			}
		}

		public virtual int DeadNationality
	    {
			get
	        {
				return base.Getint(ColumnNames.DeadNationality);
			}
			set
	        {
				base.Setint(ColumnNames.DeadNationality, value);
			}
		}

		public virtual int DeadReligion
	    {
			get
	        {
				return base.Getint(ColumnNames.DeadReligion);
			}
			set
	        {
				base.Setint(ColumnNames.DeadReligion, value);
			}
		}

		public virtual int DeadMartialStatus
	    {
			get
	        {
				return base.Getint(ColumnNames.DeadMartialStatus);
			}
			set
	        {
				base.Setint(ColumnNames.DeadMartialStatus, value);
			}
		}

		public virtual string PaperID
	    {
			get
	        {
				return base.Getstring(ColumnNames.PaperID);
			}
			set
	        {
				base.Setstring(ColumnNames.PaperID, value);
			}
		}

		public virtual int PaperIDType
	    {
			get
	        {
				return base.Getint(ColumnNames.PaperIDType);
			}
			set
	        {
				base.Setint(ColumnNames.PaperIDType, value);
			}
		}

		public virtual string PaperIssuePlace
	    {
			get
	        {
				return base.Getstring(ColumnNames.PaperIssuePlace);
			}
			set
	        {
				base.Setstring(ColumnNames.PaperIssuePlace, value);
			}
		}

		public virtual string AddressNo
	    {
			get
	        {
				return base.Getstring(ColumnNames.AddressNo);
			}
			set
	        {
				base.Setstring(ColumnNames.AddressNo, value);
			}
		}

		public virtual string AddressStreet
	    {
			get
	        {
				return base.Getstring(ColumnNames.AddressStreet);
			}
			set
	        {
				base.Setstring(ColumnNames.AddressStreet, value);
			}
		}

		public virtual string AddressFeatured
	    {
			get
	        {
				return base.Getstring(ColumnNames.AddressFeatured);
			}
			set
	        {
				base.Setstring(ColumnNames.AddressFeatured, value);
			}
		}

		public virtual int DeadGovernorate
	    {
			get
	        {
				return base.Getint(ColumnNames.DeadGovernorate);
			}
			set
	        {
				base.Setint(ColumnNames.DeadGovernorate, value);
			}
		}

		public virtual int DeadSection
	    {
			get
	        {
				return base.Getint(ColumnNames.DeadSection);
			}
			set
	        {
				base.Setint(ColumnNames.DeadSection, value);
			}
		}

		public virtual int DeadArea
	    {
			get
	        {
				return base.Getint(ColumnNames.DeadArea);
			}
			set
	        {
				base.Setint(ColumnNames.DeadArea, value);
			}
		}

		public virtual string DeadPhone
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadPhone);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadPhone, value);
			}
		}

		public virtual string DeadJob
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadJob);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadJob, value);
			}
		}

		public virtual DateTime DeadBirthDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.DeadBirthDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.DeadBirthDate, value);
			}
		}

		public virtual DateTime DeadDieDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.DeadDieDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.DeadDieDate, value);
			}
		}

		public virtual string DeadDieHour
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadDieHour);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadDieHour, value);
			}
		}

		public virtual string DeadDieMin
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadDieMin);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadDieMin, value);
			}
		}

		public virtual string DiePlace
	    {
			get
	        {
				return base.Getstring(ColumnNames.DiePlace);
			}
			set
	        {
				base.Setstring(ColumnNames.DiePlace, value);
			}
		}

		public virtual string DiePlaceDescription
	    {
			get
	        {
				return base.Getstring(ColumnNames.DiePlaceDescription);
			}
			set
	        {
				base.Setstring(ColumnNames.DiePlaceDescription, value);
			}
		}

		public virtual int DieGovernorate
	    {
			get
	        {
				return base.Getint(ColumnNames.DieGovernorate);
			}
			set
	        {
				base.Setint(ColumnNames.DieGovernorate, value);
			}
		}

		public virtual int DieSection
	    {
			get
	        {
				return base.Getint(ColumnNames.DieSection);
			}
			set
	        {
				base.Setint(ColumnNames.DieSection, value);
			}
		}

		public virtual int DieArea
	    {
			get
	        {
				return base.Getint(ColumnNames.DieArea);
			}
			set
	        {
				base.Setint(ColumnNames.DieArea, value);
			}
		}

		public virtual string DeadMotherNID
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadMotherNID);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadMotherNID, value);
			}
		}

		public virtual int DeadMotherNationality
	    {
			get
	        {
				return base.Getint(ColumnNames.DeadMotherNationality);
			}
			set
	        {
				base.Setint(ColumnNames.DeadMotherNationality, value);
			}
		}

		public virtual string DeadMotherFirstName
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadMotherFirstName);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadMotherFirstName, value);
			}
		}

		public virtual string DeadMotherSecondName
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadMotherSecondName);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadMotherSecondName, value);
			}
		}

		public virtual string DeadMotherFamilyName
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadMotherFamilyName);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadMotherFamilyName, value);
			}
		}

		public virtual int DeadMotherReligion
	    {
			get
	        {
				return base.Getint(ColumnNames.DeadMotherReligion);
			}
			set
	        {
				base.Setint(ColumnNames.DeadMotherReligion, value);
			}
		}

		public virtual string DeadMotherJob
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadMotherJob);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadMotherJob, value);
			}
		}

		public virtual string DaadMotherSureName
	    {
			get
	        {
				return base.Getstring(ColumnNames.DaadMotherSureName);
			}
			set
	        {
				base.Setstring(ColumnNames.DaadMotherSureName, value);
			}
		}

		public virtual int InformerRelation
	    {
			get
	        {
				return base.Getint(ColumnNames.InformerRelation);
			}
			set
	        {
				base.Setint(ColumnNames.InformerRelation, value);
			}
		}

		public virtual string InformerNID
	    {
			get
	        {
				return base.Getstring(ColumnNames.InformerNID);
			}
			set
	        {
				base.Setstring(ColumnNames.InformerNID, value);
			}
		}

		public virtual string InformerFirstName
	    {
			get
	        {
				return base.Getstring(ColumnNames.InformerFirstName);
			}
			set
	        {
				base.Setstring(ColumnNames.InformerFirstName, value);
			}
		}

		public virtual string InformerSecondName
	    {
			get
	        {
				return base.Getstring(ColumnNames.InformerSecondName);
			}
			set
	        {
				base.Setstring(ColumnNames.InformerSecondName, value);
			}
		}

		public virtual string InformerPhone
	    {
			get
	        {
				return base.Getstring(ColumnNames.InformerPhone);
			}
			set
	        {
				base.Setstring(ColumnNames.InformerPhone, value);
			}
		}

		public virtual string InformerAddress
	    {
			get
	        {
				return base.Getstring(ColumnNames.InformerAddress);
			}
			set
	        {
				base.Setstring(ColumnNames.InformerAddress, value);
			}
		}

		public virtual string DeadAge
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadAge);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadAge, value);
			}
		}

		public virtual Guid RegisterID
	    {
			get
	        {
				return base.GetGuid(ColumnNames.RegisterID);
			}
			set
	        {
				base.SetGuid(ColumnNames.RegisterID, value);
			}
		}

		public virtual int RegisterNo
	    {
			get
	        {
				return base.Getint(ColumnNames.RegisterNo);
			}
			set
	        {
				base.Setint(ColumnNames.RegisterNo, value);
			}
		}

		public virtual DateTime RegisterDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.RegisterDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.RegisterDate, value);
			}
		}

		public virtual string DeadDecisionNo
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadDecisionNo);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadDecisionNo, value);
			}
		}

		public virtual string DeadDecisionDirection
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadDecisionDirection);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadDecisionDirection, value);
			}
		}

		public virtual DateTime DeadDecisionDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.DeadDecisionDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.DeadDecisionDate, value);
			}
		}

		public virtual string DeadDecisionNotes
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadDecisionNotes);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadDecisionNotes, value);
			}
		}

		public virtual int OrgID
	    {
			get
	        {
				return base.Getint(ColumnNames.OrgID);
			}
			set
	        {
				base.Setint(ColumnNames.OrgID, value);
			}
		}

		public virtual bool Approved
	    {
			get
	        {
				return base.Getbool(ColumnNames.Approved);
			}
			set
	        {
				base.Setbool(ColumnNames.Approved, value);
			}
		}

		public virtual bool HasHealthData
	    {
			get
	        {
				return base.Getbool(ColumnNames.HasHealthData);
			}
			set
	        {
				base.Setbool(ColumnNames.HasHealthData, value);
			}
		}

		public virtual string ProveNumber
	    {
			get
	        {
				return base.Getstring(ColumnNames.ProveNumber);
			}
			set
	        {
				base.Setstring(ColumnNames.ProveNumber, value);
			}
		}

		public virtual string ProveText
	    {
			get
	        {
				return base.Getstring(ColumnNames.ProveText);
			}
			set
	        {
				base.Setstring(ColumnNames.ProveText, value);
			}
		}

		public virtual string MotherProveNumber
	    {
			get
	        {
				return base.Getstring(ColumnNames.MotherProveNumber);
			}
			set
	        {
				base.Setstring(ColumnNames.MotherProveNumber, value);
			}
		}

		public virtual string MotherProveText
	    {
			get
	        {
				return base.Getstring(ColumnNames.MotherProveText);
			}
			set
	        {
				base.Setstring(ColumnNames.MotherProveText, value);
			}
		}

		public virtual bool IsUnKown
	    {
			get
	        {
				return base.Getbool(ColumnNames.IsUnKown);
			}
			set
	        {
				base.Setbool(ColumnNames.IsUnKown, value);
			}
		}

		public virtual bool IsBornDead
	    {
			get
	        {
				return base.Getbool(ColumnNames.IsBornDead);
			}
			set
	        {
				base.Setbool(ColumnNames.IsBornDead, value);
			}
		}

		public virtual Guid WriterID
	    {
			get
	        {
				return base.GetGuid(ColumnNames.WriterID);
			}
			set
	        {
				base.SetGuid(ColumnNames.WriterID, value);
			}
		}

		public virtual Guid DoctorID
	    {
			get
	        {
				return base.GetGuid(ColumnNames.DoctorID);
			}
			set
	        {
				base.SetGuid(ColumnNames.DoctorID, value);
			}
		}

		public virtual string DeadFamilyPhone
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadFamilyPhone);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadFamilyPhone, value);
			}
		}

		public virtual string DeadJobDesc
	    {
			get
	        {
				return base.Getstring(ColumnNames.DeadJobDesc);
			}
			set
	        {
				base.Setstring(ColumnNames.DeadJobDesc, value);
			}
		}


		#endregion
		
		#region String Properties
	
		public virtual string s_DeadEventID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadEventID) ? string.Empty : base.GetGuidAsString(ColumnNames.DeadEventID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadEventID);
				else
					this.DeadEventID = base.SetGuidAsString(ColumnNames.DeadEventID, value);
			}
		}

		public virtual string s_DeadNID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadNID) ? string.Empty : base.GetstringAsString(ColumnNames.DeadNID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadNID);
				else
					this.DeadNID = base.SetstringAsString(ColumnNames.DeadNID, value);
			}
		}

		public virtual string s_DeadGender
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadGender) ? string.Empty : base.GetintAsString(ColumnNames.DeadGender);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadGender);
				else
					this.DeadGender = base.SetintAsString(ColumnNames.DeadGender, value);
			}
		}

		public virtual string s_DeadFirstName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadFirstName) ? string.Empty : base.GetstringAsString(ColumnNames.DeadFirstName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadFirstName);
				else
					this.DeadFirstName = base.SetstringAsString(ColumnNames.DeadFirstName, value);
			}
		}

		public virtual string s_DeadFatherName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadFatherName) ? string.Empty : base.GetstringAsString(ColumnNames.DeadFatherName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadFatherName);
				else
					this.DeadFatherName = base.SetstringAsString(ColumnNames.DeadFatherName, value);
			}
		}

		public virtual string s_DeadGrandName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadGrandName) ? string.Empty : base.GetstringAsString(ColumnNames.DeadGrandName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadGrandName);
				else
					this.DeadGrandName = base.SetstringAsString(ColumnNames.DeadGrandName, value);
			}
		}

		public virtual string s_DeadFamilyName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadFamilyName) ? string.Empty : base.GetstringAsString(ColumnNames.DeadFamilyName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadFamilyName);
				else
					this.DeadFamilyName = base.SetstringAsString(ColumnNames.DeadFamilyName, value);
			}
		}

		public virtual string s_DeadNationality
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadNationality) ? string.Empty : base.GetintAsString(ColumnNames.DeadNationality);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadNationality);
				else
					this.DeadNationality = base.SetintAsString(ColumnNames.DeadNationality, value);
			}
		}

		public virtual string s_DeadReligion
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadReligion) ? string.Empty : base.GetintAsString(ColumnNames.DeadReligion);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadReligion);
				else
					this.DeadReligion = base.SetintAsString(ColumnNames.DeadReligion, value);
			}
		}

		public virtual string s_DeadMartialStatus
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadMartialStatus) ? string.Empty : base.GetintAsString(ColumnNames.DeadMartialStatus);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadMartialStatus);
				else
					this.DeadMartialStatus = base.SetintAsString(ColumnNames.DeadMartialStatus, value);
			}
		}

		public virtual string s_PaperID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.PaperID) ? string.Empty : base.GetstringAsString(ColumnNames.PaperID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.PaperID);
				else
					this.PaperID = base.SetstringAsString(ColumnNames.PaperID, value);
			}
		}

		public virtual string s_PaperIDType
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.PaperIDType) ? string.Empty : base.GetintAsString(ColumnNames.PaperIDType);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.PaperIDType);
				else
					this.PaperIDType = base.SetintAsString(ColumnNames.PaperIDType, value);
			}
		}

		public virtual string s_PaperIssuePlace
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.PaperIssuePlace) ? string.Empty : base.GetstringAsString(ColumnNames.PaperIssuePlace);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.PaperIssuePlace);
				else
					this.PaperIssuePlace = base.SetstringAsString(ColumnNames.PaperIssuePlace, value);
			}
		}

		public virtual string s_AddressNo
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AddressNo) ? string.Empty : base.GetstringAsString(ColumnNames.AddressNo);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AddressNo);
				else
					this.AddressNo = base.SetstringAsString(ColumnNames.AddressNo, value);
			}
		}

		public virtual string s_AddressStreet
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AddressStreet) ? string.Empty : base.GetstringAsString(ColumnNames.AddressStreet);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AddressStreet);
				else
					this.AddressStreet = base.SetstringAsString(ColumnNames.AddressStreet, value);
			}
		}

		public virtual string s_AddressFeatured
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.AddressFeatured) ? string.Empty : base.GetstringAsString(ColumnNames.AddressFeatured);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.AddressFeatured);
				else
					this.AddressFeatured = base.SetstringAsString(ColumnNames.AddressFeatured, value);
			}
		}

		public virtual string s_DeadGovernorate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadGovernorate) ? string.Empty : base.GetintAsString(ColumnNames.DeadGovernorate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadGovernorate);
				else
					this.DeadGovernorate = base.SetintAsString(ColumnNames.DeadGovernorate, value);
			}
		}

		public virtual string s_DeadSection
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadSection) ? string.Empty : base.GetintAsString(ColumnNames.DeadSection);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadSection);
				else
					this.DeadSection = base.SetintAsString(ColumnNames.DeadSection, value);
			}
		}

		public virtual string s_DeadArea
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadArea) ? string.Empty : base.GetintAsString(ColumnNames.DeadArea);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadArea);
				else
					this.DeadArea = base.SetintAsString(ColumnNames.DeadArea, value);
			}
		}

		public virtual string s_DeadPhone
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadPhone) ? string.Empty : base.GetstringAsString(ColumnNames.DeadPhone);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadPhone);
				else
					this.DeadPhone = base.SetstringAsString(ColumnNames.DeadPhone, value);
			}
		}

		public virtual string s_DeadJob
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadJob) ? string.Empty : base.GetstringAsString(ColumnNames.DeadJob);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadJob);
				else
					this.DeadJob = base.SetstringAsString(ColumnNames.DeadJob, value);
			}
		}

		public virtual string s_DeadBirthDate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadBirthDate) ? string.Empty : base.GetDateTimeAsString(ColumnNames.DeadBirthDate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadBirthDate);
				else
					this.DeadBirthDate = base.SetDateTimeAsString(ColumnNames.DeadBirthDate, value);
			}
		}

		public virtual string s_DeadDieDate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadDieDate) ? string.Empty : base.GetDateTimeAsString(ColumnNames.DeadDieDate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadDieDate);
				else
					this.DeadDieDate = base.SetDateTimeAsString(ColumnNames.DeadDieDate, value);
			}
		}

		public virtual string s_DeadDieHour
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadDieHour) ? string.Empty : base.GetstringAsString(ColumnNames.DeadDieHour);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadDieHour);
				else
					this.DeadDieHour = base.SetstringAsString(ColumnNames.DeadDieHour, value);
			}
		}

		public virtual string s_DeadDieMin
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadDieMin) ? string.Empty : base.GetstringAsString(ColumnNames.DeadDieMin);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadDieMin);
				else
					this.DeadDieMin = base.SetstringAsString(ColumnNames.DeadDieMin, value);
			}
		}

		public virtual string s_DiePlace
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DiePlace) ? string.Empty : base.GetstringAsString(ColumnNames.DiePlace);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DiePlace);
				else
					this.DiePlace = base.SetstringAsString(ColumnNames.DiePlace, value);
			}
		}

		public virtual string s_DiePlaceDescription
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DiePlaceDescription) ? string.Empty : base.GetstringAsString(ColumnNames.DiePlaceDescription);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DiePlaceDescription);
				else
					this.DiePlaceDescription = base.SetstringAsString(ColumnNames.DiePlaceDescription, value);
			}
		}

		public virtual string s_DieGovernorate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DieGovernorate) ? string.Empty : base.GetintAsString(ColumnNames.DieGovernorate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DieGovernorate);
				else
					this.DieGovernorate = base.SetintAsString(ColumnNames.DieGovernorate, value);
			}
		}

		public virtual string s_DieSection
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DieSection) ? string.Empty : base.GetintAsString(ColumnNames.DieSection);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DieSection);
				else
					this.DieSection = base.SetintAsString(ColumnNames.DieSection, value);
			}
		}

		public virtual string s_DieArea
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DieArea) ? string.Empty : base.GetintAsString(ColumnNames.DieArea);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DieArea);
				else
					this.DieArea = base.SetintAsString(ColumnNames.DieArea, value);
			}
		}

		public virtual string s_DeadMotherNID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadMotherNID) ? string.Empty : base.GetstringAsString(ColumnNames.DeadMotherNID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadMotherNID);
				else
					this.DeadMotherNID = base.SetstringAsString(ColumnNames.DeadMotherNID, value);
			}
		}

		public virtual string s_DeadMotherNationality
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadMotherNationality) ? string.Empty : base.GetintAsString(ColumnNames.DeadMotherNationality);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadMotherNationality);
				else
					this.DeadMotherNationality = base.SetintAsString(ColumnNames.DeadMotherNationality, value);
			}
		}

		public virtual string s_DeadMotherFirstName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadMotherFirstName) ? string.Empty : base.GetstringAsString(ColumnNames.DeadMotherFirstName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadMotherFirstName);
				else
					this.DeadMotherFirstName = base.SetstringAsString(ColumnNames.DeadMotherFirstName, value);
			}
		}

		public virtual string s_DeadMotherSecondName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadMotherSecondName) ? string.Empty : base.GetstringAsString(ColumnNames.DeadMotherSecondName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadMotherSecondName);
				else
					this.DeadMotherSecondName = base.SetstringAsString(ColumnNames.DeadMotherSecondName, value);
			}
		}

		public virtual string s_DeadMotherFamilyName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadMotherFamilyName) ? string.Empty : base.GetstringAsString(ColumnNames.DeadMotherFamilyName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadMotherFamilyName);
				else
					this.DeadMotherFamilyName = base.SetstringAsString(ColumnNames.DeadMotherFamilyName, value);
			}
		}

		public virtual string s_DeadMotherReligion
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadMotherReligion) ? string.Empty : base.GetintAsString(ColumnNames.DeadMotherReligion);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadMotherReligion);
				else
					this.DeadMotherReligion = base.SetintAsString(ColumnNames.DeadMotherReligion, value);
			}
		}

		public virtual string s_DeadMotherJob
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadMotherJob) ? string.Empty : base.GetstringAsString(ColumnNames.DeadMotherJob);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadMotherJob);
				else
					this.DeadMotherJob = base.SetstringAsString(ColumnNames.DeadMotherJob, value);
			}
		}

		public virtual string s_DaadMotherSureName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DaadMotherSureName) ? string.Empty : base.GetstringAsString(ColumnNames.DaadMotherSureName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DaadMotherSureName);
				else
					this.DaadMotherSureName = base.SetstringAsString(ColumnNames.DaadMotherSureName, value);
			}
		}

		public virtual string s_InformerRelation
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.InformerRelation) ? string.Empty : base.GetintAsString(ColumnNames.InformerRelation);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.InformerRelation);
				else
					this.InformerRelation = base.SetintAsString(ColumnNames.InformerRelation, value);
			}
		}

		public virtual string s_InformerNID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.InformerNID) ? string.Empty : base.GetstringAsString(ColumnNames.InformerNID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.InformerNID);
				else
					this.InformerNID = base.SetstringAsString(ColumnNames.InformerNID, value);
			}
		}

		public virtual string s_InformerFirstName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.InformerFirstName) ? string.Empty : base.GetstringAsString(ColumnNames.InformerFirstName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.InformerFirstName);
				else
					this.InformerFirstName = base.SetstringAsString(ColumnNames.InformerFirstName, value);
			}
		}

		public virtual string s_InformerSecondName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.InformerSecondName) ? string.Empty : base.GetstringAsString(ColumnNames.InformerSecondName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.InformerSecondName);
				else
					this.InformerSecondName = base.SetstringAsString(ColumnNames.InformerSecondName, value);
			}
		}

		public virtual string s_InformerPhone
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.InformerPhone) ? string.Empty : base.GetstringAsString(ColumnNames.InformerPhone);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.InformerPhone);
				else
					this.InformerPhone = base.SetstringAsString(ColumnNames.InformerPhone, value);
			}
		}

		public virtual string s_InformerAddress
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.InformerAddress) ? string.Empty : base.GetstringAsString(ColumnNames.InformerAddress);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.InformerAddress);
				else
					this.InformerAddress = base.SetstringAsString(ColumnNames.InformerAddress, value);
			}
		}

		public virtual string s_DeadAge
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadAge) ? string.Empty : base.GetstringAsString(ColumnNames.DeadAge);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadAge);
				else
					this.DeadAge = base.SetstringAsString(ColumnNames.DeadAge, value);
			}
		}

		public virtual string s_RegisterID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.RegisterID) ? string.Empty : base.GetGuidAsString(ColumnNames.RegisterID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.RegisterID);
				else
					this.RegisterID = base.SetGuidAsString(ColumnNames.RegisterID, value);
			}
		}

		public virtual string s_RegisterNo
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.RegisterNo) ? string.Empty : base.GetintAsString(ColumnNames.RegisterNo);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.RegisterNo);
				else
					this.RegisterNo = base.SetintAsString(ColumnNames.RegisterNo, value);
			}
		}

		public virtual string s_RegisterDate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.RegisterDate) ? string.Empty : base.GetDateTimeAsString(ColumnNames.RegisterDate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.RegisterDate);
				else
					this.RegisterDate = base.SetDateTimeAsString(ColumnNames.RegisterDate, value);
			}
		}

		public virtual string s_DeadDecisionNo
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadDecisionNo) ? string.Empty : base.GetstringAsString(ColumnNames.DeadDecisionNo);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadDecisionNo);
				else
					this.DeadDecisionNo = base.SetstringAsString(ColumnNames.DeadDecisionNo, value);
			}
		}

		public virtual string s_DeadDecisionDirection
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadDecisionDirection) ? string.Empty : base.GetstringAsString(ColumnNames.DeadDecisionDirection);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadDecisionDirection);
				else
					this.DeadDecisionDirection = base.SetstringAsString(ColumnNames.DeadDecisionDirection, value);
			}
		}

		public virtual string s_DeadDecisionDate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadDecisionDate) ? string.Empty : base.GetDateTimeAsString(ColumnNames.DeadDecisionDate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadDecisionDate);
				else
					this.DeadDecisionDate = base.SetDateTimeAsString(ColumnNames.DeadDecisionDate, value);
			}
		}

		public virtual string s_DeadDecisionNotes
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadDecisionNotes) ? string.Empty : base.GetstringAsString(ColumnNames.DeadDecisionNotes);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadDecisionNotes);
				else
					this.DeadDecisionNotes = base.SetstringAsString(ColumnNames.DeadDecisionNotes, value);
			}
		}

		public virtual string s_OrgID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.OrgID) ? string.Empty : base.GetintAsString(ColumnNames.OrgID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.OrgID);
				else
					this.OrgID = base.SetintAsString(ColumnNames.OrgID, value);
			}
		}

		public virtual string s_Approved
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Approved) ? string.Empty : base.GetboolAsString(ColumnNames.Approved);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Approved);
				else
					this.Approved = base.SetboolAsString(ColumnNames.Approved, value);
			}
		}

		public virtual string s_HasHealthData
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.HasHealthData) ? string.Empty : base.GetboolAsString(ColumnNames.HasHealthData);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.HasHealthData);
				else
					this.HasHealthData = base.SetboolAsString(ColumnNames.HasHealthData, value);
			}
		}

		public virtual string s_ProveNumber
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.ProveNumber) ? string.Empty : base.GetstringAsString(ColumnNames.ProveNumber);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.ProveNumber);
				else
					this.ProveNumber = base.SetstringAsString(ColumnNames.ProveNumber, value);
			}
		}

		public virtual string s_ProveText
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.ProveText) ? string.Empty : base.GetstringAsString(ColumnNames.ProveText);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.ProveText);
				else
					this.ProveText = base.SetstringAsString(ColumnNames.ProveText, value);
			}
		}

		public virtual string s_MotherProveNumber
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.MotherProveNumber) ? string.Empty : base.GetstringAsString(ColumnNames.MotherProveNumber);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.MotherProveNumber);
				else
					this.MotherProveNumber = base.SetstringAsString(ColumnNames.MotherProveNumber, value);
			}
		}

		public virtual string s_MotherProveText
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.MotherProveText) ? string.Empty : base.GetstringAsString(ColumnNames.MotherProveText);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.MotherProveText);
				else
					this.MotherProveText = base.SetstringAsString(ColumnNames.MotherProveText, value);
			}
		}

		public virtual string s_IsUnKown
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.IsUnKown) ? string.Empty : base.GetboolAsString(ColumnNames.IsUnKown);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.IsUnKown);
				else
					this.IsUnKown = base.SetboolAsString(ColumnNames.IsUnKown, value);
			}
		}

		public virtual string s_IsBornDead
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.IsBornDead) ? string.Empty : base.GetboolAsString(ColumnNames.IsBornDead);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.IsBornDead);
				else
					this.IsBornDead = base.SetboolAsString(ColumnNames.IsBornDead, value);
			}
		}

		public virtual string s_WriterID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.WriterID) ? string.Empty : base.GetGuidAsString(ColumnNames.WriterID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.WriterID);
				else
					this.WriterID = base.SetGuidAsString(ColumnNames.WriterID, value);
			}
		}

		public virtual string s_DoctorID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DoctorID) ? string.Empty : base.GetGuidAsString(ColumnNames.DoctorID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DoctorID);
				else
					this.DoctorID = base.SetGuidAsString(ColumnNames.DoctorID, value);
			}
		}

		public virtual string s_DeadFamilyPhone
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadFamilyPhone) ? string.Empty : base.GetstringAsString(ColumnNames.DeadFamilyPhone);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadFamilyPhone);
				else
					this.DeadFamilyPhone = base.SetstringAsString(ColumnNames.DeadFamilyPhone, value);
			}
		}

		public virtual string s_DeadJobDesc
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DeadJobDesc) ? string.Empty : base.GetstringAsString(ColumnNames.DeadJobDesc);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DeadJobDesc);
				else
					this.DeadJobDesc = base.SetstringAsString(ColumnNames.DeadJobDesc, value);
			}
		}


		#endregion		
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region WhereParameter TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter DeadEventID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadEventID, Parameters.DeadEventID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadNID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadNID, Parameters.DeadNID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadGender
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadGender, Parameters.DeadGender);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadFirstName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadFirstName, Parameters.DeadFirstName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadFatherName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadFatherName, Parameters.DeadFatherName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadGrandName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadGrandName, Parameters.DeadGrandName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadFamilyName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadFamilyName, Parameters.DeadFamilyName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadNationality
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadNationality, Parameters.DeadNationality);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadReligion
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadReligion, Parameters.DeadReligion);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadMartialStatus
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadMartialStatus, Parameters.DeadMartialStatus);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter PaperID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.PaperID, Parameters.PaperID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter PaperIDType
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.PaperIDType, Parameters.PaperIDType);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter PaperIssuePlace
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.PaperIssuePlace, Parameters.PaperIssuePlace);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AddressNo
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AddressNo, Parameters.AddressNo);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AddressStreet
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AddressStreet, Parameters.AddressStreet);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter AddressFeatured
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.AddressFeatured, Parameters.AddressFeatured);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadGovernorate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadGovernorate, Parameters.DeadGovernorate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadSection
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadSection, Parameters.DeadSection);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadArea
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadArea, Parameters.DeadArea);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadPhone
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadPhone, Parameters.DeadPhone);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadJob
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadJob, Parameters.DeadJob);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadBirthDate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadBirthDate, Parameters.DeadBirthDate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadDieDate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadDieDate, Parameters.DeadDieDate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadDieHour
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadDieHour, Parameters.DeadDieHour);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadDieMin
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadDieMin, Parameters.DeadDieMin);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DiePlace
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DiePlace, Parameters.DiePlace);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DiePlaceDescription
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DiePlaceDescription, Parameters.DiePlaceDescription);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DieGovernorate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DieGovernorate, Parameters.DieGovernorate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DieSection
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DieSection, Parameters.DieSection);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DieArea
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DieArea, Parameters.DieArea);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadMotherNID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadMotherNID, Parameters.DeadMotherNID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadMotherNationality
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadMotherNationality, Parameters.DeadMotherNationality);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadMotherFirstName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadMotherFirstName, Parameters.DeadMotherFirstName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadMotherSecondName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadMotherSecondName, Parameters.DeadMotherSecondName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadMotherFamilyName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadMotherFamilyName, Parameters.DeadMotherFamilyName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadMotherReligion
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadMotherReligion, Parameters.DeadMotherReligion);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadMotherJob
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadMotherJob, Parameters.DeadMotherJob);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DaadMotherSureName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DaadMotherSureName, Parameters.DaadMotherSureName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter InformerRelation
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.InformerRelation, Parameters.InformerRelation);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter InformerNID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.InformerNID, Parameters.InformerNID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter InformerFirstName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.InformerFirstName, Parameters.InformerFirstName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter InformerSecondName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.InformerSecondName, Parameters.InformerSecondName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter InformerPhone
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.InformerPhone, Parameters.InformerPhone);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter InformerAddress
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.InformerAddress, Parameters.InformerAddress);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadAge
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadAge, Parameters.DeadAge);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter RegisterID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.RegisterID, Parameters.RegisterID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter RegisterNo
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.RegisterNo, Parameters.RegisterNo);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter RegisterDate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.RegisterDate, Parameters.RegisterDate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadDecisionNo
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadDecisionNo, Parameters.DeadDecisionNo);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadDecisionDirection
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadDecisionDirection, Parameters.DeadDecisionDirection);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadDecisionDate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadDecisionDate, Parameters.DeadDecisionDate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadDecisionNotes
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadDecisionNotes, Parameters.DeadDecisionNotes);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter OrgID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.OrgID, Parameters.OrgID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Approved
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Approved, Parameters.Approved);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter HasHealthData
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.HasHealthData, Parameters.HasHealthData);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter ProveNumber
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.ProveNumber, Parameters.ProveNumber);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter ProveText
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.ProveText, Parameters.ProveText);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter MotherProveNumber
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.MotherProveNumber, Parameters.MotherProveNumber);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter MotherProveText
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.MotherProveText, Parameters.MotherProveText);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter IsUnKown
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.IsUnKown, Parameters.IsUnKown);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter IsBornDead
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.IsBornDead, Parameters.IsBornDead);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter WriterID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.WriterID, Parameters.WriterID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DoctorID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DoctorID, Parameters.DoctorID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadFamilyPhone
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadFamilyPhone, Parameters.DeadFamilyPhone);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DeadJobDesc
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DeadJobDesc, Parameters.DeadJobDesc);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter DeadEventID
		    {
				get
		        {
					if(_DeadEventID_W == null)
	        	    {
						_DeadEventID_W = TearOff.DeadEventID;
					}
					return _DeadEventID_W;
				}
			}

			public WhereParameter DeadNID
		    {
				get
		        {
					if(_DeadNID_W == null)
	        	    {
						_DeadNID_W = TearOff.DeadNID;
					}
					return _DeadNID_W;
				}
			}

			public WhereParameter DeadGender
		    {
				get
		        {
					if(_DeadGender_W == null)
	        	    {
						_DeadGender_W = TearOff.DeadGender;
					}
					return _DeadGender_W;
				}
			}

			public WhereParameter DeadFirstName
		    {
				get
		        {
					if(_DeadFirstName_W == null)
	        	    {
						_DeadFirstName_W = TearOff.DeadFirstName;
					}
					return _DeadFirstName_W;
				}
			}

			public WhereParameter DeadFatherName
		    {
				get
		        {
					if(_DeadFatherName_W == null)
	        	    {
						_DeadFatherName_W = TearOff.DeadFatherName;
					}
					return _DeadFatherName_W;
				}
			}

			public WhereParameter DeadGrandName
		    {
				get
		        {
					if(_DeadGrandName_W == null)
	        	    {
						_DeadGrandName_W = TearOff.DeadGrandName;
					}
					return _DeadGrandName_W;
				}
			}

			public WhereParameter DeadFamilyName
		    {
				get
		        {
					if(_DeadFamilyName_W == null)
	        	    {
						_DeadFamilyName_W = TearOff.DeadFamilyName;
					}
					return _DeadFamilyName_W;
				}
			}

			public WhereParameter DeadNationality
		    {
				get
		        {
					if(_DeadNationality_W == null)
	        	    {
						_DeadNationality_W = TearOff.DeadNationality;
					}
					return _DeadNationality_W;
				}
			}

			public WhereParameter DeadReligion
		    {
				get
		        {
					if(_DeadReligion_W == null)
	        	    {
						_DeadReligion_W = TearOff.DeadReligion;
					}
					return _DeadReligion_W;
				}
			}

			public WhereParameter DeadMartialStatus
		    {
				get
		        {
					if(_DeadMartialStatus_W == null)
	        	    {
						_DeadMartialStatus_W = TearOff.DeadMartialStatus;
					}
					return _DeadMartialStatus_W;
				}
			}

			public WhereParameter PaperID
		    {
				get
		        {
					if(_PaperID_W == null)
	        	    {
						_PaperID_W = TearOff.PaperID;
					}
					return _PaperID_W;
				}
			}

			public WhereParameter PaperIDType
		    {
				get
		        {
					if(_PaperIDType_W == null)
	        	    {
						_PaperIDType_W = TearOff.PaperIDType;
					}
					return _PaperIDType_W;
				}
			}

			public WhereParameter PaperIssuePlace
		    {
				get
		        {
					if(_PaperIssuePlace_W == null)
	        	    {
						_PaperIssuePlace_W = TearOff.PaperIssuePlace;
					}
					return _PaperIssuePlace_W;
				}
			}

			public WhereParameter AddressNo
		    {
				get
		        {
					if(_AddressNo_W == null)
	        	    {
						_AddressNo_W = TearOff.AddressNo;
					}
					return _AddressNo_W;
				}
			}

			public WhereParameter AddressStreet
		    {
				get
		        {
					if(_AddressStreet_W == null)
	        	    {
						_AddressStreet_W = TearOff.AddressStreet;
					}
					return _AddressStreet_W;
				}
			}

			public WhereParameter AddressFeatured
		    {
				get
		        {
					if(_AddressFeatured_W == null)
	        	    {
						_AddressFeatured_W = TearOff.AddressFeatured;
					}
					return _AddressFeatured_W;
				}
			}

			public WhereParameter DeadGovernorate
		    {
				get
		        {
					if(_DeadGovernorate_W == null)
	        	    {
						_DeadGovernorate_W = TearOff.DeadGovernorate;
					}
					return _DeadGovernorate_W;
				}
			}

			public WhereParameter DeadSection
		    {
				get
		        {
					if(_DeadSection_W == null)
	        	    {
						_DeadSection_W = TearOff.DeadSection;
					}
					return _DeadSection_W;
				}
			}

			public WhereParameter DeadArea
		    {
				get
		        {
					if(_DeadArea_W == null)
	        	    {
						_DeadArea_W = TearOff.DeadArea;
					}
					return _DeadArea_W;
				}
			}

			public WhereParameter DeadPhone
		    {
				get
		        {
					if(_DeadPhone_W == null)
	        	    {
						_DeadPhone_W = TearOff.DeadPhone;
					}
					return _DeadPhone_W;
				}
			}

			public WhereParameter DeadJob
		    {
				get
		        {
					if(_DeadJob_W == null)
	        	    {
						_DeadJob_W = TearOff.DeadJob;
					}
					return _DeadJob_W;
				}
			}

			public WhereParameter DeadBirthDate
		    {
				get
		        {
					if(_DeadBirthDate_W == null)
	        	    {
						_DeadBirthDate_W = TearOff.DeadBirthDate;
					}
					return _DeadBirthDate_W;
				}
			}

			public WhereParameter DeadDieDate
		    {
				get
		        {
					if(_DeadDieDate_W == null)
	        	    {
						_DeadDieDate_W = TearOff.DeadDieDate;
					}
					return _DeadDieDate_W;
				}
			}

			public WhereParameter DeadDieHour
		    {
				get
		        {
					if(_DeadDieHour_W == null)
	        	    {
						_DeadDieHour_W = TearOff.DeadDieHour;
					}
					return _DeadDieHour_W;
				}
			}

			public WhereParameter DeadDieMin
		    {
				get
		        {
					if(_DeadDieMin_W == null)
	        	    {
						_DeadDieMin_W = TearOff.DeadDieMin;
					}
					return _DeadDieMin_W;
				}
			}

			public WhereParameter DiePlace
		    {
				get
		        {
					if(_DiePlace_W == null)
	        	    {
						_DiePlace_W = TearOff.DiePlace;
					}
					return _DiePlace_W;
				}
			}

			public WhereParameter DiePlaceDescription
		    {
				get
		        {
					if(_DiePlaceDescription_W == null)
	        	    {
						_DiePlaceDescription_W = TearOff.DiePlaceDescription;
					}
					return _DiePlaceDescription_W;
				}
			}

			public WhereParameter DieGovernorate
		    {
				get
		        {
					if(_DieGovernorate_W == null)
	        	    {
						_DieGovernorate_W = TearOff.DieGovernorate;
					}
					return _DieGovernorate_W;
				}
			}

			public WhereParameter DieSection
		    {
				get
		        {
					if(_DieSection_W == null)
	        	    {
						_DieSection_W = TearOff.DieSection;
					}
					return _DieSection_W;
				}
			}

			public WhereParameter DieArea
		    {
				get
		        {
					if(_DieArea_W == null)
	        	    {
						_DieArea_W = TearOff.DieArea;
					}
					return _DieArea_W;
				}
			}

			public WhereParameter DeadMotherNID
		    {
				get
		        {
					if(_DeadMotherNID_W == null)
	        	    {
						_DeadMotherNID_W = TearOff.DeadMotherNID;
					}
					return _DeadMotherNID_W;
				}
			}

			public WhereParameter DeadMotherNationality
		    {
				get
		        {
					if(_DeadMotherNationality_W == null)
	        	    {
						_DeadMotherNationality_W = TearOff.DeadMotherNationality;
					}
					return _DeadMotherNationality_W;
				}
			}

			public WhereParameter DeadMotherFirstName
		    {
				get
		        {
					if(_DeadMotherFirstName_W == null)
	        	    {
						_DeadMotherFirstName_W = TearOff.DeadMotherFirstName;
					}
					return _DeadMotherFirstName_W;
				}
			}

			public WhereParameter DeadMotherSecondName
		    {
				get
		        {
					if(_DeadMotherSecondName_W == null)
	        	    {
						_DeadMotherSecondName_W = TearOff.DeadMotherSecondName;
					}
					return _DeadMotherSecondName_W;
				}
			}

			public WhereParameter DeadMotherFamilyName
		    {
				get
		        {
					if(_DeadMotherFamilyName_W == null)
	        	    {
						_DeadMotherFamilyName_W = TearOff.DeadMotherFamilyName;
					}
					return _DeadMotherFamilyName_W;
				}
			}

			public WhereParameter DeadMotherReligion
		    {
				get
		        {
					if(_DeadMotherReligion_W == null)
	        	    {
						_DeadMotherReligion_W = TearOff.DeadMotherReligion;
					}
					return _DeadMotherReligion_W;
				}
			}

			public WhereParameter DeadMotherJob
		    {
				get
		        {
					if(_DeadMotherJob_W == null)
	        	    {
						_DeadMotherJob_W = TearOff.DeadMotherJob;
					}
					return _DeadMotherJob_W;
				}
			}

			public WhereParameter DaadMotherSureName
		    {
				get
		        {
					if(_DaadMotherSureName_W == null)
	        	    {
						_DaadMotherSureName_W = TearOff.DaadMotherSureName;
					}
					return _DaadMotherSureName_W;
				}
			}

			public WhereParameter InformerRelation
		    {
				get
		        {
					if(_InformerRelation_W == null)
	        	    {
						_InformerRelation_W = TearOff.InformerRelation;
					}
					return _InformerRelation_W;
				}
			}

			public WhereParameter InformerNID
		    {
				get
		        {
					if(_InformerNID_W == null)
	        	    {
						_InformerNID_W = TearOff.InformerNID;
					}
					return _InformerNID_W;
				}
			}

			public WhereParameter InformerFirstName
		    {
				get
		        {
					if(_InformerFirstName_W == null)
	        	    {
						_InformerFirstName_W = TearOff.InformerFirstName;
					}
					return _InformerFirstName_W;
				}
			}

			public WhereParameter InformerSecondName
		    {
				get
		        {
					if(_InformerSecondName_W == null)
	        	    {
						_InformerSecondName_W = TearOff.InformerSecondName;
					}
					return _InformerSecondName_W;
				}
			}

			public WhereParameter InformerPhone
		    {
				get
		        {
					if(_InformerPhone_W == null)
	        	    {
						_InformerPhone_W = TearOff.InformerPhone;
					}
					return _InformerPhone_W;
				}
			}

			public WhereParameter InformerAddress
		    {
				get
		        {
					if(_InformerAddress_W == null)
	        	    {
						_InformerAddress_W = TearOff.InformerAddress;
					}
					return _InformerAddress_W;
				}
			}

			public WhereParameter DeadAge
		    {
				get
		        {
					if(_DeadAge_W == null)
	        	    {
						_DeadAge_W = TearOff.DeadAge;
					}
					return _DeadAge_W;
				}
			}

			public WhereParameter RegisterID
		    {
				get
		        {
					if(_RegisterID_W == null)
	        	    {
						_RegisterID_W = TearOff.RegisterID;
					}
					return _RegisterID_W;
				}
			}

			public WhereParameter RegisterNo
		    {
				get
		        {
					if(_RegisterNo_W == null)
	        	    {
						_RegisterNo_W = TearOff.RegisterNo;
					}
					return _RegisterNo_W;
				}
			}

			public WhereParameter RegisterDate
		    {
				get
		        {
					if(_RegisterDate_W == null)
	        	    {
						_RegisterDate_W = TearOff.RegisterDate;
					}
					return _RegisterDate_W;
				}
			}

			public WhereParameter DeadDecisionNo
		    {
				get
		        {
					if(_DeadDecisionNo_W == null)
	        	    {
						_DeadDecisionNo_W = TearOff.DeadDecisionNo;
					}
					return _DeadDecisionNo_W;
				}
			}

			public WhereParameter DeadDecisionDirection
		    {
				get
		        {
					if(_DeadDecisionDirection_W == null)
	        	    {
						_DeadDecisionDirection_W = TearOff.DeadDecisionDirection;
					}
					return _DeadDecisionDirection_W;
				}
			}

			public WhereParameter DeadDecisionDate
		    {
				get
		        {
					if(_DeadDecisionDate_W == null)
	        	    {
						_DeadDecisionDate_W = TearOff.DeadDecisionDate;
					}
					return _DeadDecisionDate_W;
				}
			}

			public WhereParameter DeadDecisionNotes
		    {
				get
		        {
					if(_DeadDecisionNotes_W == null)
	        	    {
						_DeadDecisionNotes_W = TearOff.DeadDecisionNotes;
					}
					return _DeadDecisionNotes_W;
				}
			}

			public WhereParameter OrgID
		    {
				get
		        {
					if(_OrgID_W == null)
	        	    {
						_OrgID_W = TearOff.OrgID;
					}
					return _OrgID_W;
				}
			}

			public WhereParameter Approved
		    {
				get
		        {
					if(_Approved_W == null)
	        	    {
						_Approved_W = TearOff.Approved;
					}
					return _Approved_W;
				}
			}

			public WhereParameter HasHealthData
		    {
				get
		        {
					if(_HasHealthData_W == null)
	        	    {
						_HasHealthData_W = TearOff.HasHealthData;
					}
					return _HasHealthData_W;
				}
			}

			public WhereParameter ProveNumber
		    {
				get
		        {
					if(_ProveNumber_W == null)
	        	    {
						_ProveNumber_W = TearOff.ProveNumber;
					}
					return _ProveNumber_W;
				}
			}

			public WhereParameter ProveText
		    {
				get
		        {
					if(_ProveText_W == null)
	        	    {
						_ProveText_W = TearOff.ProveText;
					}
					return _ProveText_W;
				}
			}

			public WhereParameter MotherProveNumber
		    {
				get
		        {
					if(_MotherProveNumber_W == null)
	        	    {
						_MotherProveNumber_W = TearOff.MotherProveNumber;
					}
					return _MotherProveNumber_W;
				}
			}

			public WhereParameter MotherProveText
		    {
				get
		        {
					if(_MotherProveText_W == null)
	        	    {
						_MotherProveText_W = TearOff.MotherProveText;
					}
					return _MotherProveText_W;
				}
			}

			public WhereParameter IsUnKown
		    {
				get
		        {
					if(_IsUnKown_W == null)
	        	    {
						_IsUnKown_W = TearOff.IsUnKown;
					}
					return _IsUnKown_W;
				}
			}

			public WhereParameter IsBornDead
		    {
				get
		        {
					if(_IsBornDead_W == null)
	        	    {
						_IsBornDead_W = TearOff.IsBornDead;
					}
					return _IsBornDead_W;
				}
			}

			public WhereParameter WriterID
		    {
				get
		        {
					if(_WriterID_W == null)
	        	    {
						_WriterID_W = TearOff.WriterID;
					}
					return _WriterID_W;
				}
			}

			public WhereParameter DoctorID
		    {
				get
		        {
					if(_DoctorID_W == null)
	        	    {
						_DoctorID_W = TearOff.DoctorID;
					}
					return _DoctorID_W;
				}
			}

			public WhereParameter DeadFamilyPhone
		    {
				get
		        {
					if(_DeadFamilyPhone_W == null)
	        	    {
						_DeadFamilyPhone_W = TearOff.DeadFamilyPhone;
					}
					return _DeadFamilyPhone_W;
				}
			}

			public WhereParameter DeadJobDesc
		    {
				get
		        {
					if(_DeadJobDesc_W == null)
	        	    {
						_DeadJobDesc_W = TearOff.DeadJobDesc;
					}
					return _DeadJobDesc_W;
				}
			}

			private WhereParameter _DeadEventID_W = null;
			private WhereParameter _DeadNID_W = null;
			private WhereParameter _DeadGender_W = null;
			private WhereParameter _DeadFirstName_W = null;
			private WhereParameter _DeadFatherName_W = null;
			private WhereParameter _DeadGrandName_W = null;
			private WhereParameter _DeadFamilyName_W = null;
			private WhereParameter _DeadNationality_W = null;
			private WhereParameter _DeadReligion_W = null;
			private WhereParameter _DeadMartialStatus_W = null;
			private WhereParameter _PaperID_W = null;
			private WhereParameter _PaperIDType_W = null;
			private WhereParameter _PaperIssuePlace_W = null;
			private WhereParameter _AddressNo_W = null;
			private WhereParameter _AddressStreet_W = null;
			private WhereParameter _AddressFeatured_W = null;
			private WhereParameter _DeadGovernorate_W = null;
			private WhereParameter _DeadSection_W = null;
			private WhereParameter _DeadArea_W = null;
			private WhereParameter _DeadPhone_W = null;
			private WhereParameter _DeadJob_W = null;
			private WhereParameter _DeadBirthDate_W = null;
			private WhereParameter _DeadDieDate_W = null;
			private WhereParameter _DeadDieHour_W = null;
			private WhereParameter _DeadDieMin_W = null;
			private WhereParameter _DiePlace_W = null;
			private WhereParameter _DiePlaceDescription_W = null;
			private WhereParameter _DieGovernorate_W = null;
			private WhereParameter _DieSection_W = null;
			private WhereParameter _DieArea_W = null;
			private WhereParameter _DeadMotherNID_W = null;
			private WhereParameter _DeadMotherNationality_W = null;
			private WhereParameter _DeadMotherFirstName_W = null;
			private WhereParameter _DeadMotherSecondName_W = null;
			private WhereParameter _DeadMotherFamilyName_W = null;
			private WhereParameter _DeadMotherReligion_W = null;
			private WhereParameter _DeadMotherJob_W = null;
			private WhereParameter _DaadMotherSureName_W = null;
			private WhereParameter _InformerRelation_W = null;
			private WhereParameter _InformerNID_W = null;
			private WhereParameter _InformerFirstName_W = null;
			private WhereParameter _InformerSecondName_W = null;
			private WhereParameter _InformerPhone_W = null;
			private WhereParameter _InformerAddress_W = null;
			private WhereParameter _DeadAge_W = null;
			private WhereParameter _RegisterID_W = null;
			private WhereParameter _RegisterNo_W = null;
			private WhereParameter _RegisterDate_W = null;
			private WhereParameter _DeadDecisionNo_W = null;
			private WhereParameter _DeadDecisionDirection_W = null;
			private WhereParameter _DeadDecisionDate_W = null;
			private WhereParameter _DeadDecisionNotes_W = null;
			private WhereParameter _OrgID_W = null;
			private WhereParameter _Approved_W = null;
			private WhereParameter _HasHealthData_W = null;
			private WhereParameter _ProveNumber_W = null;
			private WhereParameter _ProveText_W = null;
			private WhereParameter _MotherProveNumber_W = null;
			private WhereParameter _MotherProveText_W = null;
			private WhereParameter _IsUnKown_W = null;
			private WhereParameter _IsBornDead_W = null;
			private WhereParameter _WriterID_W = null;
			private WhereParameter _DoctorID_W = null;
			private WhereParameter _DeadFamilyPhone_W = null;
			private WhereParameter _DeadJobDesc_W = null;

			public void WhereClauseReset()
			{
				_DeadEventID_W = null;
				_DeadNID_W = null;
				_DeadGender_W = null;
				_DeadFirstName_W = null;
				_DeadFatherName_W = null;
				_DeadGrandName_W = null;
				_DeadFamilyName_W = null;
				_DeadNationality_W = null;
				_DeadReligion_W = null;
				_DeadMartialStatus_W = null;
				_PaperID_W = null;
				_PaperIDType_W = null;
				_PaperIssuePlace_W = null;
				_AddressNo_W = null;
				_AddressStreet_W = null;
				_AddressFeatured_W = null;
				_DeadGovernorate_W = null;
				_DeadSection_W = null;
				_DeadArea_W = null;
				_DeadPhone_W = null;
				_DeadJob_W = null;
				_DeadBirthDate_W = null;
				_DeadDieDate_W = null;
				_DeadDieHour_W = null;
				_DeadDieMin_W = null;
				_DiePlace_W = null;
				_DiePlaceDescription_W = null;
				_DieGovernorate_W = null;
				_DieSection_W = null;
				_DieArea_W = null;
				_DeadMotherNID_W = null;
				_DeadMotherNationality_W = null;
				_DeadMotherFirstName_W = null;
				_DeadMotherSecondName_W = null;
				_DeadMotherFamilyName_W = null;
				_DeadMotherReligion_W = null;
				_DeadMotherJob_W = null;
				_DaadMotherSureName_W = null;
				_InformerRelation_W = null;
				_InformerNID_W = null;
				_InformerFirstName_W = null;
				_InformerSecondName_W = null;
				_InformerPhone_W = null;
				_InformerAddress_W = null;
				_DeadAge_W = null;
				_RegisterID_W = null;
				_RegisterNo_W = null;
				_RegisterDate_W = null;
				_DeadDecisionNo_W = null;
				_DeadDecisionDirection_W = null;
				_DeadDecisionDate_W = null;
				_DeadDecisionNotes_W = null;
				_OrgID_W = null;
				_Approved_W = null;
				_HasHealthData_W = null;
				_ProveNumber_W = null;
				_ProveText_W = null;
				_MotherProveNumber_W = null;
				_MotherProveText_W = null;
				_IsUnKown_W = null;
				_IsBornDead_W = null;
				_WriterID_W = null;
				_DoctorID_W = null;
				_DeadFamilyPhone_W = null;
				_DeadJobDesc_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
	
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region AggregateParameter TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter DeadEventID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadEventID, Parameters.DeadEventID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadNID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadNID, Parameters.DeadNID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadGender
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadGender, Parameters.DeadGender);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadFirstName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadFirstName, Parameters.DeadFirstName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadFatherName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadFatherName, Parameters.DeadFatherName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadGrandName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadGrandName, Parameters.DeadGrandName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadFamilyName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadFamilyName, Parameters.DeadFamilyName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadNationality
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadNationality, Parameters.DeadNationality);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadReligion
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadReligion, Parameters.DeadReligion);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadMartialStatus
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadMartialStatus, Parameters.DeadMartialStatus);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter PaperID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.PaperID, Parameters.PaperID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter PaperIDType
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.PaperIDType, Parameters.PaperIDType);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter PaperIssuePlace
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.PaperIssuePlace, Parameters.PaperIssuePlace);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AddressNo
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AddressNo, Parameters.AddressNo);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AddressStreet
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AddressStreet, Parameters.AddressStreet);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter AddressFeatured
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.AddressFeatured, Parameters.AddressFeatured);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadGovernorate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadGovernorate, Parameters.DeadGovernorate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadSection
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadSection, Parameters.DeadSection);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadArea
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadArea, Parameters.DeadArea);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadPhone
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadPhone, Parameters.DeadPhone);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadJob
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadJob, Parameters.DeadJob);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadBirthDate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadBirthDate, Parameters.DeadBirthDate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadDieDate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadDieDate, Parameters.DeadDieDate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadDieHour
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadDieHour, Parameters.DeadDieHour);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadDieMin
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadDieMin, Parameters.DeadDieMin);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DiePlace
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DiePlace, Parameters.DiePlace);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DiePlaceDescription
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DiePlaceDescription, Parameters.DiePlaceDescription);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DieGovernorate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DieGovernorate, Parameters.DieGovernorate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DieSection
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DieSection, Parameters.DieSection);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DieArea
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DieArea, Parameters.DieArea);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadMotherNID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadMotherNID, Parameters.DeadMotherNID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadMotherNationality
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadMotherNationality, Parameters.DeadMotherNationality);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadMotherFirstName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadMotherFirstName, Parameters.DeadMotherFirstName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadMotherSecondName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadMotherSecondName, Parameters.DeadMotherSecondName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadMotherFamilyName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadMotherFamilyName, Parameters.DeadMotherFamilyName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadMotherReligion
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadMotherReligion, Parameters.DeadMotherReligion);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadMotherJob
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadMotherJob, Parameters.DeadMotherJob);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DaadMotherSureName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DaadMotherSureName, Parameters.DaadMotherSureName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter InformerRelation
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.InformerRelation, Parameters.InformerRelation);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter InformerNID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.InformerNID, Parameters.InformerNID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter InformerFirstName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.InformerFirstName, Parameters.InformerFirstName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter InformerSecondName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.InformerSecondName, Parameters.InformerSecondName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter InformerPhone
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.InformerPhone, Parameters.InformerPhone);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter InformerAddress
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.InformerAddress, Parameters.InformerAddress);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadAge
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadAge, Parameters.DeadAge);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter RegisterID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.RegisterID, Parameters.RegisterID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter RegisterNo
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.RegisterNo, Parameters.RegisterNo);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter RegisterDate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.RegisterDate, Parameters.RegisterDate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadDecisionNo
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadDecisionNo, Parameters.DeadDecisionNo);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadDecisionDirection
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadDecisionDirection, Parameters.DeadDecisionDirection);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadDecisionDate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadDecisionDate, Parameters.DeadDecisionDate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadDecisionNotes
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadDecisionNotes, Parameters.DeadDecisionNotes);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter OrgID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.OrgID, Parameters.OrgID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Approved
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Approved, Parameters.Approved);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter HasHealthData
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.HasHealthData, Parameters.HasHealthData);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter ProveNumber
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.ProveNumber, Parameters.ProveNumber);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter ProveText
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.ProveText, Parameters.ProveText);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter MotherProveNumber
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.MotherProveNumber, Parameters.MotherProveNumber);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter MotherProveText
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.MotherProveText, Parameters.MotherProveText);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter IsUnKown
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.IsUnKown, Parameters.IsUnKown);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter IsBornDead
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.IsBornDead, Parameters.IsBornDead);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter WriterID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.WriterID, Parameters.WriterID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DoctorID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DoctorID, Parameters.DoctorID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadFamilyPhone
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadFamilyPhone, Parameters.DeadFamilyPhone);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DeadJobDesc
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DeadJobDesc, Parameters.DeadJobDesc);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter DeadEventID
		    {
				get
		        {
					if(_DeadEventID_W == null)
	        	    {
						_DeadEventID_W = TearOff.DeadEventID;
					}
					return _DeadEventID_W;
				}
			}

			public AggregateParameter DeadNID
		    {
				get
		        {
					if(_DeadNID_W == null)
	        	    {
						_DeadNID_W = TearOff.DeadNID;
					}
					return _DeadNID_W;
				}
			}

			public AggregateParameter DeadGender
		    {
				get
		        {
					if(_DeadGender_W == null)
	        	    {
						_DeadGender_W = TearOff.DeadGender;
					}
					return _DeadGender_W;
				}
			}

			public AggregateParameter DeadFirstName
		    {
				get
		        {
					if(_DeadFirstName_W == null)
	        	    {
						_DeadFirstName_W = TearOff.DeadFirstName;
					}
					return _DeadFirstName_W;
				}
			}

			public AggregateParameter DeadFatherName
		    {
				get
		        {
					if(_DeadFatherName_W == null)
	        	    {
						_DeadFatherName_W = TearOff.DeadFatherName;
					}
					return _DeadFatherName_W;
				}
			}

			public AggregateParameter DeadGrandName
		    {
				get
		        {
					if(_DeadGrandName_W == null)
	        	    {
						_DeadGrandName_W = TearOff.DeadGrandName;
					}
					return _DeadGrandName_W;
				}
			}

			public AggregateParameter DeadFamilyName
		    {
				get
		        {
					if(_DeadFamilyName_W == null)
	        	    {
						_DeadFamilyName_W = TearOff.DeadFamilyName;
					}
					return _DeadFamilyName_W;
				}
			}

			public AggregateParameter DeadNationality
		    {
				get
		        {
					if(_DeadNationality_W == null)
	        	    {
						_DeadNationality_W = TearOff.DeadNationality;
					}
					return _DeadNationality_W;
				}
			}

			public AggregateParameter DeadReligion
		    {
				get
		        {
					if(_DeadReligion_W == null)
	        	    {
						_DeadReligion_W = TearOff.DeadReligion;
					}
					return _DeadReligion_W;
				}
			}

			public AggregateParameter DeadMartialStatus
		    {
				get
		        {
					if(_DeadMartialStatus_W == null)
	        	    {
						_DeadMartialStatus_W = TearOff.DeadMartialStatus;
					}
					return _DeadMartialStatus_W;
				}
			}

			public AggregateParameter PaperID
		    {
				get
		        {
					if(_PaperID_W == null)
	        	    {
						_PaperID_W = TearOff.PaperID;
					}
					return _PaperID_W;
				}
			}

			public AggregateParameter PaperIDType
		    {
				get
		        {
					if(_PaperIDType_W == null)
	        	    {
						_PaperIDType_W = TearOff.PaperIDType;
					}
					return _PaperIDType_W;
				}
			}

			public AggregateParameter PaperIssuePlace
		    {
				get
		        {
					if(_PaperIssuePlace_W == null)
	        	    {
						_PaperIssuePlace_W = TearOff.PaperIssuePlace;
					}
					return _PaperIssuePlace_W;
				}
			}

			public AggregateParameter AddressNo
		    {
				get
		        {
					if(_AddressNo_W == null)
	        	    {
						_AddressNo_W = TearOff.AddressNo;
					}
					return _AddressNo_W;
				}
			}

			public AggregateParameter AddressStreet
		    {
				get
		        {
					if(_AddressStreet_W == null)
	        	    {
						_AddressStreet_W = TearOff.AddressStreet;
					}
					return _AddressStreet_W;
				}
			}

			public AggregateParameter AddressFeatured
		    {
				get
		        {
					if(_AddressFeatured_W == null)
	        	    {
						_AddressFeatured_W = TearOff.AddressFeatured;
					}
					return _AddressFeatured_W;
				}
			}

			public AggregateParameter DeadGovernorate
		    {
				get
		        {
					if(_DeadGovernorate_W == null)
	        	    {
						_DeadGovernorate_W = TearOff.DeadGovernorate;
					}
					return _DeadGovernorate_W;
				}
			}

			public AggregateParameter DeadSection
		    {
				get
		        {
					if(_DeadSection_W == null)
	        	    {
						_DeadSection_W = TearOff.DeadSection;
					}
					return _DeadSection_W;
				}
			}

			public AggregateParameter DeadArea
		    {
				get
		        {
					if(_DeadArea_W == null)
	        	    {
						_DeadArea_W = TearOff.DeadArea;
					}
					return _DeadArea_W;
				}
			}

			public AggregateParameter DeadPhone
		    {
				get
		        {
					if(_DeadPhone_W == null)
	        	    {
						_DeadPhone_W = TearOff.DeadPhone;
					}
					return _DeadPhone_W;
				}
			}

			public AggregateParameter DeadJob
		    {
				get
		        {
					if(_DeadJob_W == null)
	        	    {
						_DeadJob_W = TearOff.DeadJob;
					}
					return _DeadJob_W;
				}
			}

			public AggregateParameter DeadBirthDate
		    {
				get
		        {
					if(_DeadBirthDate_W == null)
	        	    {
						_DeadBirthDate_W = TearOff.DeadBirthDate;
					}
					return _DeadBirthDate_W;
				}
			}

			public AggregateParameter DeadDieDate
		    {
				get
		        {
					if(_DeadDieDate_W == null)
	        	    {
						_DeadDieDate_W = TearOff.DeadDieDate;
					}
					return _DeadDieDate_W;
				}
			}

			public AggregateParameter DeadDieHour
		    {
				get
		        {
					if(_DeadDieHour_W == null)
	        	    {
						_DeadDieHour_W = TearOff.DeadDieHour;
					}
					return _DeadDieHour_W;
				}
			}

			public AggregateParameter DeadDieMin
		    {
				get
		        {
					if(_DeadDieMin_W == null)
	        	    {
						_DeadDieMin_W = TearOff.DeadDieMin;
					}
					return _DeadDieMin_W;
				}
			}

			public AggregateParameter DiePlace
		    {
				get
		        {
					if(_DiePlace_W == null)
	        	    {
						_DiePlace_W = TearOff.DiePlace;
					}
					return _DiePlace_W;
				}
			}

			public AggregateParameter DiePlaceDescription
		    {
				get
		        {
					if(_DiePlaceDescription_W == null)
	        	    {
						_DiePlaceDescription_W = TearOff.DiePlaceDescription;
					}
					return _DiePlaceDescription_W;
				}
			}

			public AggregateParameter DieGovernorate
		    {
				get
		        {
					if(_DieGovernorate_W == null)
	        	    {
						_DieGovernorate_W = TearOff.DieGovernorate;
					}
					return _DieGovernorate_W;
				}
			}

			public AggregateParameter DieSection
		    {
				get
		        {
					if(_DieSection_W == null)
	        	    {
						_DieSection_W = TearOff.DieSection;
					}
					return _DieSection_W;
				}
			}

			public AggregateParameter DieArea
		    {
				get
		        {
					if(_DieArea_W == null)
	        	    {
						_DieArea_W = TearOff.DieArea;
					}
					return _DieArea_W;
				}
			}

			public AggregateParameter DeadMotherNID
		    {
				get
		        {
					if(_DeadMotherNID_W == null)
	        	    {
						_DeadMotherNID_W = TearOff.DeadMotherNID;
					}
					return _DeadMotherNID_W;
				}
			}

			public AggregateParameter DeadMotherNationality
		    {
				get
		        {
					if(_DeadMotherNationality_W == null)
	        	    {
						_DeadMotherNationality_W = TearOff.DeadMotherNationality;
					}
					return _DeadMotherNationality_W;
				}
			}

			public AggregateParameter DeadMotherFirstName
		    {
				get
		        {
					if(_DeadMotherFirstName_W == null)
	        	    {
						_DeadMotherFirstName_W = TearOff.DeadMotherFirstName;
					}
					return _DeadMotherFirstName_W;
				}
			}

			public AggregateParameter DeadMotherSecondName
		    {
				get
		        {
					if(_DeadMotherSecondName_W == null)
	        	    {
						_DeadMotherSecondName_W = TearOff.DeadMotherSecondName;
					}
					return _DeadMotherSecondName_W;
				}
			}

			public AggregateParameter DeadMotherFamilyName
		    {
				get
		        {
					if(_DeadMotherFamilyName_W == null)
	        	    {
						_DeadMotherFamilyName_W = TearOff.DeadMotherFamilyName;
					}
					return _DeadMotherFamilyName_W;
				}
			}

			public AggregateParameter DeadMotherReligion
		    {
				get
		        {
					if(_DeadMotherReligion_W == null)
	        	    {
						_DeadMotherReligion_W = TearOff.DeadMotherReligion;
					}
					return _DeadMotherReligion_W;
				}
			}

			public AggregateParameter DeadMotherJob
		    {
				get
		        {
					if(_DeadMotherJob_W == null)
	        	    {
						_DeadMotherJob_W = TearOff.DeadMotherJob;
					}
					return _DeadMotherJob_W;
				}
			}

			public AggregateParameter DaadMotherSureName
		    {
				get
		        {
					if(_DaadMotherSureName_W == null)
	        	    {
						_DaadMotherSureName_W = TearOff.DaadMotherSureName;
					}
					return _DaadMotherSureName_W;
				}
			}

			public AggregateParameter InformerRelation
		    {
				get
		        {
					if(_InformerRelation_W == null)
	        	    {
						_InformerRelation_W = TearOff.InformerRelation;
					}
					return _InformerRelation_W;
				}
			}

			public AggregateParameter InformerNID
		    {
				get
		        {
					if(_InformerNID_W == null)
	        	    {
						_InformerNID_W = TearOff.InformerNID;
					}
					return _InformerNID_W;
				}
			}

			public AggregateParameter InformerFirstName
		    {
				get
		        {
					if(_InformerFirstName_W == null)
	        	    {
						_InformerFirstName_W = TearOff.InformerFirstName;
					}
					return _InformerFirstName_W;
				}
			}

			public AggregateParameter InformerSecondName
		    {
				get
		        {
					if(_InformerSecondName_W == null)
	        	    {
						_InformerSecondName_W = TearOff.InformerSecondName;
					}
					return _InformerSecondName_W;
				}
			}

			public AggregateParameter InformerPhone
		    {
				get
		        {
					if(_InformerPhone_W == null)
	        	    {
						_InformerPhone_W = TearOff.InformerPhone;
					}
					return _InformerPhone_W;
				}
			}

			public AggregateParameter InformerAddress
		    {
				get
		        {
					if(_InformerAddress_W == null)
	        	    {
						_InformerAddress_W = TearOff.InformerAddress;
					}
					return _InformerAddress_W;
				}
			}

			public AggregateParameter DeadAge
		    {
				get
		        {
					if(_DeadAge_W == null)
	        	    {
						_DeadAge_W = TearOff.DeadAge;
					}
					return _DeadAge_W;
				}
			}

			public AggregateParameter RegisterID
		    {
				get
		        {
					if(_RegisterID_W == null)
	        	    {
						_RegisterID_W = TearOff.RegisterID;
					}
					return _RegisterID_W;
				}
			}

			public AggregateParameter RegisterNo
		    {
				get
		        {
					if(_RegisterNo_W == null)
	        	    {
						_RegisterNo_W = TearOff.RegisterNo;
					}
					return _RegisterNo_W;
				}
			}

			public AggregateParameter RegisterDate
		    {
				get
		        {
					if(_RegisterDate_W == null)
	        	    {
						_RegisterDate_W = TearOff.RegisterDate;
					}
					return _RegisterDate_W;
				}
			}

			public AggregateParameter DeadDecisionNo
		    {
				get
		        {
					if(_DeadDecisionNo_W == null)
	        	    {
						_DeadDecisionNo_W = TearOff.DeadDecisionNo;
					}
					return _DeadDecisionNo_W;
				}
			}

			public AggregateParameter DeadDecisionDirection
		    {
				get
		        {
					if(_DeadDecisionDirection_W == null)
	        	    {
						_DeadDecisionDirection_W = TearOff.DeadDecisionDirection;
					}
					return _DeadDecisionDirection_W;
				}
			}

			public AggregateParameter DeadDecisionDate
		    {
				get
		        {
					if(_DeadDecisionDate_W == null)
	        	    {
						_DeadDecisionDate_W = TearOff.DeadDecisionDate;
					}
					return _DeadDecisionDate_W;
				}
			}

			public AggregateParameter DeadDecisionNotes
		    {
				get
		        {
					if(_DeadDecisionNotes_W == null)
	        	    {
						_DeadDecisionNotes_W = TearOff.DeadDecisionNotes;
					}
					return _DeadDecisionNotes_W;
				}
			}

			public AggregateParameter OrgID
		    {
				get
		        {
					if(_OrgID_W == null)
	        	    {
						_OrgID_W = TearOff.OrgID;
					}
					return _OrgID_W;
				}
			}

			public AggregateParameter Approved
		    {
				get
		        {
					if(_Approved_W == null)
	        	    {
						_Approved_W = TearOff.Approved;
					}
					return _Approved_W;
				}
			}

			public AggregateParameter HasHealthData
		    {
				get
		        {
					if(_HasHealthData_W == null)
	        	    {
						_HasHealthData_W = TearOff.HasHealthData;
					}
					return _HasHealthData_W;
				}
			}

			public AggregateParameter ProveNumber
		    {
				get
		        {
					if(_ProveNumber_W == null)
	        	    {
						_ProveNumber_W = TearOff.ProveNumber;
					}
					return _ProveNumber_W;
				}
			}

			public AggregateParameter ProveText
		    {
				get
		        {
					if(_ProveText_W == null)
	        	    {
						_ProveText_W = TearOff.ProveText;
					}
					return _ProveText_W;
				}
			}

			public AggregateParameter MotherProveNumber
		    {
				get
		        {
					if(_MotherProveNumber_W == null)
	        	    {
						_MotherProveNumber_W = TearOff.MotherProveNumber;
					}
					return _MotherProveNumber_W;
				}
			}

			public AggregateParameter MotherProveText
		    {
				get
		        {
					if(_MotherProveText_W == null)
	        	    {
						_MotherProveText_W = TearOff.MotherProveText;
					}
					return _MotherProveText_W;
				}
			}

			public AggregateParameter IsUnKown
		    {
				get
		        {
					if(_IsUnKown_W == null)
	        	    {
						_IsUnKown_W = TearOff.IsUnKown;
					}
					return _IsUnKown_W;
				}
			}

			public AggregateParameter IsBornDead
		    {
				get
		        {
					if(_IsBornDead_W == null)
	        	    {
						_IsBornDead_W = TearOff.IsBornDead;
					}
					return _IsBornDead_W;
				}
			}

			public AggregateParameter WriterID
		    {
				get
		        {
					if(_WriterID_W == null)
	        	    {
						_WriterID_W = TearOff.WriterID;
					}
					return _WriterID_W;
				}
			}

			public AggregateParameter DoctorID
		    {
				get
		        {
					if(_DoctorID_W == null)
	        	    {
						_DoctorID_W = TearOff.DoctorID;
					}
					return _DoctorID_W;
				}
			}

			public AggregateParameter DeadFamilyPhone
		    {
				get
		        {
					if(_DeadFamilyPhone_W == null)
	        	    {
						_DeadFamilyPhone_W = TearOff.DeadFamilyPhone;
					}
					return _DeadFamilyPhone_W;
				}
			}

			public AggregateParameter DeadJobDesc
		    {
				get
		        {
					if(_DeadJobDesc_W == null)
	        	    {
						_DeadJobDesc_W = TearOff.DeadJobDesc;
					}
					return _DeadJobDesc_W;
				}
			}

			private AggregateParameter _DeadEventID_W = null;
			private AggregateParameter _DeadNID_W = null;
			private AggregateParameter _DeadGender_W = null;
			private AggregateParameter _DeadFirstName_W = null;
			private AggregateParameter _DeadFatherName_W = null;
			private AggregateParameter _DeadGrandName_W = null;
			private AggregateParameter _DeadFamilyName_W = null;
			private AggregateParameter _DeadNationality_W = null;
			private AggregateParameter _DeadReligion_W = null;
			private AggregateParameter _DeadMartialStatus_W = null;
			private AggregateParameter _PaperID_W = null;
			private AggregateParameter _PaperIDType_W = null;
			private AggregateParameter _PaperIssuePlace_W = null;
			private AggregateParameter _AddressNo_W = null;
			private AggregateParameter _AddressStreet_W = null;
			private AggregateParameter _AddressFeatured_W = null;
			private AggregateParameter _DeadGovernorate_W = null;
			private AggregateParameter _DeadSection_W = null;
			private AggregateParameter _DeadArea_W = null;
			private AggregateParameter _DeadPhone_W = null;
			private AggregateParameter _DeadJob_W = null;
			private AggregateParameter _DeadBirthDate_W = null;
			private AggregateParameter _DeadDieDate_W = null;
			private AggregateParameter _DeadDieHour_W = null;
			private AggregateParameter _DeadDieMin_W = null;
			private AggregateParameter _DiePlace_W = null;
			private AggregateParameter _DiePlaceDescription_W = null;
			private AggregateParameter _DieGovernorate_W = null;
			private AggregateParameter _DieSection_W = null;
			private AggregateParameter _DieArea_W = null;
			private AggregateParameter _DeadMotherNID_W = null;
			private AggregateParameter _DeadMotherNationality_W = null;
			private AggregateParameter _DeadMotherFirstName_W = null;
			private AggregateParameter _DeadMotherSecondName_W = null;
			private AggregateParameter _DeadMotherFamilyName_W = null;
			private AggregateParameter _DeadMotherReligion_W = null;
			private AggregateParameter _DeadMotherJob_W = null;
			private AggregateParameter _DaadMotherSureName_W = null;
			private AggregateParameter _InformerRelation_W = null;
			private AggregateParameter _InformerNID_W = null;
			private AggregateParameter _InformerFirstName_W = null;
			private AggregateParameter _InformerSecondName_W = null;
			private AggregateParameter _InformerPhone_W = null;
			private AggregateParameter _InformerAddress_W = null;
			private AggregateParameter _DeadAge_W = null;
			private AggregateParameter _RegisterID_W = null;
			private AggregateParameter _RegisterNo_W = null;
			private AggregateParameter _RegisterDate_W = null;
			private AggregateParameter _DeadDecisionNo_W = null;
			private AggregateParameter _DeadDecisionDirection_W = null;
			private AggregateParameter _DeadDecisionDate_W = null;
			private AggregateParameter _DeadDecisionNotes_W = null;
			private AggregateParameter _OrgID_W = null;
			private AggregateParameter _Approved_W = null;
			private AggregateParameter _HasHealthData_W = null;
			private AggregateParameter _ProveNumber_W = null;
			private AggregateParameter _ProveText_W = null;
			private AggregateParameter _MotherProveNumber_W = null;
			private AggregateParameter _MotherProveText_W = null;
			private AggregateParameter _IsUnKown_W = null;
			private AggregateParameter _IsBornDead_W = null;
			private AggregateParameter _WriterID_W = null;
			private AggregateParameter _DoctorID_W = null;
			private AggregateParameter _DeadFamilyPhone_W = null;
			private AggregateParameter _DeadJobDesc_W = null;

			public void AggregateClauseReset()
			{
				_DeadEventID_W = null;
				_DeadNID_W = null;
				_DeadGender_W = null;
				_DeadFirstName_W = null;
				_DeadFatherName_W = null;
				_DeadGrandName_W = null;
				_DeadFamilyName_W = null;
				_DeadNationality_W = null;
				_DeadReligion_W = null;
				_DeadMartialStatus_W = null;
				_PaperID_W = null;
				_PaperIDType_W = null;
				_PaperIssuePlace_W = null;
				_AddressNo_W = null;
				_AddressStreet_W = null;
				_AddressFeatured_W = null;
				_DeadGovernorate_W = null;
				_DeadSection_W = null;
				_DeadArea_W = null;
				_DeadPhone_W = null;
				_DeadJob_W = null;
				_DeadBirthDate_W = null;
				_DeadDieDate_W = null;
				_DeadDieHour_W = null;
				_DeadDieMin_W = null;
				_DiePlace_W = null;
				_DiePlaceDescription_W = null;
				_DieGovernorate_W = null;
				_DieSection_W = null;
				_DieArea_W = null;
				_DeadMotherNID_W = null;
				_DeadMotherNationality_W = null;
				_DeadMotherFirstName_W = null;
				_DeadMotherSecondName_W = null;
				_DeadMotherFamilyName_W = null;
				_DeadMotherReligion_W = null;
				_DeadMotherJob_W = null;
				_DaadMotherSureName_W = null;
				_InformerRelation_W = null;
				_InformerNID_W = null;
				_InformerFirstName_W = null;
				_InformerSecondName_W = null;
				_InformerPhone_W = null;
				_InformerAddress_W = null;
				_DeadAge_W = null;
				_RegisterID_W = null;
				_RegisterNo_W = null;
				_RegisterDate_W = null;
				_DeadDecisionNo_W = null;
				_DeadDecisionDirection_W = null;
				_DeadDecisionDate_W = null;
				_DeadDecisionNotes_W = null;
				_OrgID_W = null;
				_Approved_W = null;
				_HasHealthData_W = null;
				_ProveNumber_W = null;
				_ProveText_W = null;
				_MotherProveNumber_W = null;
				_MotherProveText_W = null;
				_IsUnKown_W = null;
				_IsBornDead_W = null;
				_WriterID_W = null;
				_DoctorID_W = null;
				_DeadFamilyPhone_W = null;
				_DeadJobDesc_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	
		protected override IDbCommand GetInsertCommand() 
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_DeadInsert]";
	
			CreateParameters(cmd);
			    
			return cmd;
		}
	
		protected override IDbCommand GetUpdateCommand()
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_DeadUpdate]";
	
			CreateParameters(cmd);
			      
			return cmd;
		}
	
		protected override IDbCommand GetDeleteCommand()
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_DeadDelete]";
	
			SqlParameter p;
			p = cmd.Parameters.Add(Parameters.DeadEventID);
			p.SourceColumn = ColumnNames.DeadEventID;
			p.SourceVersion = DataRowVersion.Current;

  
			return cmd;
		}
		
		private IDbCommand CreateParameters(SqlCommand cmd)
		{
			SqlParameter p;
		
			p = cmd.Parameters.Add(Parameters.DeadEventID);
			p.SourceColumn = ColumnNames.DeadEventID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadNID);
			p.SourceColumn = ColumnNames.DeadNID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadGender);
			p.SourceColumn = ColumnNames.DeadGender;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadFirstName);
			p.SourceColumn = ColumnNames.DeadFirstName;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadFatherName);
			p.SourceColumn = ColumnNames.DeadFatherName;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadGrandName);
			p.SourceColumn = ColumnNames.DeadGrandName;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadFamilyName);
			p.SourceColumn = ColumnNames.DeadFamilyName;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadNationality);
			p.SourceColumn = ColumnNames.DeadNationality;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadReligion);
			p.SourceColumn = ColumnNames.DeadReligion;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadMartialStatus);
			p.SourceColumn = ColumnNames.DeadMartialStatus;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.PaperID);
			p.SourceColumn = ColumnNames.PaperID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.PaperIDType);
			p.SourceColumn = ColumnNames.PaperIDType;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.PaperIssuePlace);
			p.SourceColumn = ColumnNames.PaperIssuePlace;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AddressNo);
			p.SourceColumn = ColumnNames.AddressNo;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AddressStreet);
			p.SourceColumn = ColumnNames.AddressStreet;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.AddressFeatured);
			p.SourceColumn = ColumnNames.AddressFeatured;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadGovernorate);
			p.SourceColumn = ColumnNames.DeadGovernorate;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadSection);
			p.SourceColumn = ColumnNames.DeadSection;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadArea);
			p.SourceColumn = ColumnNames.DeadArea;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadPhone);
			p.SourceColumn = ColumnNames.DeadPhone;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadJob);
			p.SourceColumn = ColumnNames.DeadJob;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadBirthDate);
			p.SourceColumn = ColumnNames.DeadBirthDate;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadDieDate);
			p.SourceColumn = ColumnNames.DeadDieDate;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadDieHour);
			p.SourceColumn = ColumnNames.DeadDieHour;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadDieMin);
			p.SourceColumn = ColumnNames.DeadDieMin;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DiePlace);
			p.SourceColumn = ColumnNames.DiePlace;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DiePlaceDescription);
			p.SourceColumn = ColumnNames.DiePlaceDescription;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DieGovernorate);
			p.SourceColumn = ColumnNames.DieGovernorate;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DieSection);
			p.SourceColumn = ColumnNames.DieSection;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DieArea);
			p.SourceColumn = ColumnNames.DieArea;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadMotherNID);
			p.SourceColumn = ColumnNames.DeadMotherNID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadMotherNationality);
			p.SourceColumn = ColumnNames.DeadMotherNationality;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadMotherFirstName);
			p.SourceColumn = ColumnNames.DeadMotherFirstName;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadMotherSecondName);
			p.SourceColumn = ColumnNames.DeadMotherSecondName;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadMotherFamilyName);
			p.SourceColumn = ColumnNames.DeadMotherFamilyName;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadMotherReligion);
			p.SourceColumn = ColumnNames.DeadMotherReligion;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadMotherJob);
			p.SourceColumn = ColumnNames.DeadMotherJob;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DaadMotherSureName);
			p.SourceColumn = ColumnNames.DaadMotherSureName;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.InformerRelation);
			p.SourceColumn = ColumnNames.InformerRelation;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.InformerNID);
			p.SourceColumn = ColumnNames.InformerNID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.InformerFirstName);
			p.SourceColumn = ColumnNames.InformerFirstName;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.InformerSecondName);
			p.SourceColumn = ColumnNames.InformerSecondName;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.InformerPhone);
			p.SourceColumn = ColumnNames.InformerPhone;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.InformerAddress);
			p.SourceColumn = ColumnNames.InformerAddress;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadAge);
			p.SourceColumn = ColumnNames.DeadAge;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.RegisterID);
			p.SourceColumn = ColumnNames.RegisterID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.RegisterNo);
			p.SourceColumn = ColumnNames.RegisterNo;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.RegisterDate);
			p.SourceColumn = ColumnNames.RegisterDate;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadDecisionNo);
			p.SourceColumn = ColumnNames.DeadDecisionNo;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadDecisionDirection);
			p.SourceColumn = ColumnNames.DeadDecisionDirection;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadDecisionDate);
			p.SourceColumn = ColumnNames.DeadDecisionDate;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadDecisionNotes);
			p.SourceColumn = ColumnNames.DeadDecisionNotes;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.OrgID);
			p.SourceColumn = ColumnNames.OrgID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.Approved);
			p.SourceColumn = ColumnNames.Approved;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.HasHealthData);
			p.SourceColumn = ColumnNames.HasHealthData;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.ProveNumber);
			p.SourceColumn = ColumnNames.ProveNumber;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.ProveText);
			p.SourceColumn = ColumnNames.ProveText;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.MotherProveNumber);
			p.SourceColumn = ColumnNames.MotherProveNumber;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.MotherProveText);
			p.SourceColumn = ColumnNames.MotherProveText;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.IsUnKown);
			p.SourceColumn = ColumnNames.IsUnKown;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.IsBornDead);
			p.SourceColumn = ColumnNames.IsBornDead;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.WriterID);
			p.SourceColumn = ColumnNames.WriterID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DoctorID);
			p.SourceColumn = ColumnNames.DoctorID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadFamilyPhone);
			p.SourceColumn = ColumnNames.DeadFamilyPhone;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DeadJobDesc);
			p.SourceColumn = ColumnNames.DeadJobDesc;
			p.SourceVersion = DataRowVersion.Current;


			return cmd;
		}
	}
}
